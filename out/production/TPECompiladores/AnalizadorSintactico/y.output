   0  $accept : programa $end

   1  programa : encabezado_prog bloque_sentencias

   2  encabezado_prog : id

   3  bloque_sentencias : bloque_sentencias '{' sentencia '}'
   4                    | '{' sentencia '}'
   5                    | '{' sentencia
   6                    | sentencia '}'

   7  declaracion_const : Const lista_de_asignacion_const ';'
   8                    | Const lista_de_asignacion_const error
   9                    | Const ';' error

  10  lista_de_asignacion_const : decl_const
  11                            | lista_de_asignacion_const ',' decl_const

  12  decl_const : id op_asignacion cte
  13             | id op_asignacion error
  14             | id cte error
  15             | id error

  16  bloque_sentencias_For : sentencias_For
  17                        | bloque_sentencias_For sentencias_For

  18  sentencia : declarativas
  19            | ejecutables
  20            | sentencia declarativas
  21            | sentencia ejecutables

  22  declarativas : tipo lista_de_variables ';'
  23               | tipo lista_de_variables error
  24               | tipo error
  25               | declaracion_func
  26               | declaracion_const
  27               | sentencia_when

  28  bloque_ejecutables : bloque_ejecutables ejecutables
  29                     | ejecutables

  30  ejecutables : asignacion
  31              | salida
  32              | sentencia_If
  33              | expresion_For
  34              | invocacion_funcion
  35              | sentencia_BREAK error
  36              | sentencia_CONTINUE error

<<<<<<< HEAD
  36  lista_de_variables : id
  37                     | lista_de_variables ',' id
  38                     | lista_de_variables id
=======
  37  lista_de_variables : id
  38                     | lista_de_variables ',' id
  39                     | lista_de_variables id error
>>>>>>> release

  40  encabezado_func : fun id '('
  41                  | fun '(' error

  42  parametro : tipo id
  43            | id error

  44  asig_fun : ':' tipo
  45           |

  46  cola_func : ')' asig_fun '{' cuerpo_fun '}'

  47  declaracion_func : encabezado_func parametro cola_func
  48                   | encabezado_func parametro ',' parametro cola_func
  49                   | encabezado_func parametro ',' parametro ',' parametro cola_func
  50                   | encabezado_func cola_func

  51  ret_fun : Return '(' expresion ')' ';'
  52          | Return expresion ')' ';' error
  53          | Return '(' expresion ';' error
  54          | Return expresion ';' error
  55          | Return '(' expresion ')' error

  56  cuerpo_fun : bloque_sentencias_funcion

  57  ejecutables_funcion : asignacion
  58                      | sentencia_if_funcion
  59                      | salida
  60                      | invocacion_funcion
  61                      | sentencia_for_funcion
  62                      | ret_fun
  63                      | sentencia_BREAK error
  64                      | sentencia_CONTINUE error

  65  bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion ejecutables_funcion
  66                                        | ejecutables_funcion

  67  bloque_sentencias_funcion : bloque_sentencias_funcion ejecutables_funcion
  68                            | bloque_sentencias_funcion declarativas
  69                            | ejecutables_funcion
  70                            | declarativas

  71  op_asignacion : opasignacion
  72                | ':' '='
  73                | '='

  74  asignacion : id op_asignacion expresion ';'
  75             | id op_asignacion expresion error
  76             | id op_asignacion for_else_cte ';'

  77  for_else_cte : expresion_For Else cte
  78               | expresion_For error

  79  salida : out '(' cadena ')' ';'
  80         | out '(' cadena ')' error
  81         | out '(' cadena error ';'
  82         | out cadena error ';'
  83         | '(' cadena error
  84         | out '(' ')' error ';'

  85  sentencia_If : If condicion_if cuerpo_If end_if ';'
  86               | If condicion_if then cuerpo_If end_if error
  87               | If condicion_if then cuerpo_If error

  88  condicion_if : '(' expresion_relacional ')'
  89               | expresion_relacional ')'
  90               | '(' expresion_relacional
  91               | expresion_relacional

  92  cuerpo_If : cuerpo_Then cuerpo_Else
  93            | cuerpo_Then
  94            | cuerpo_Else

  95  cuerpo_Then : then '{' bloque_ejecutables '}'
  96              | then ejecutables

  97  cuerpo_Else : Else '{' bloque_ejecutables '}'
  98              | Else ejecutables

  99  sentencia_if_for : If condicion_if cuerpo_If_for end_if ';'
 100                   | If condicion_if cuerpo_If_for end_if error
 101                   | If condicion_if cuerpo_If_for error

 102  cuerpo_If_for : cuerpo_then_for cuerpo_Else_for
 103                | cuerpo_then_for
 104                | cuerpo_Else_for error

<<<<<<< HEAD
<<<<<<< HEAD
 109  asignacion : id op_asignacion expresion ';'
 110             | id op_asignacion expresion
 111             | etiquetaFor

 112  etiquetaFor : id op_asignacion encabezado_For devolverValor

 113  devolverValor : Else cte ';'
 114                | error

 115  salida : out '(' cadena ')' ';'
 116         | out '(' cadena ')' error
 117         | out '(' cadena error ';'
 118         | out cadena error ';'
 119         | '(' cadena error
 120         | out '(' ')' error ';'

 121  sentencia_If : If condicion_if then cuerpo_If end_if ';'
 122               | If condicion_if then cuerpo_If Else cuerpo_Else end_if ';'
 123               | If condicion_if then cuerpo_If Else cuerpo_Else end_if error
 124               | If condicion_if then cuerpo_If error
 125               | If condicion_if then cuerpo_If Else cuerpo_Else error ';'
 126               | If condicion_if cuerpo_If error

 127  cuerpo_If : '{' bloque_ejecutables '}'
 128            | ejecutables

 129  cuerpo_Else : '{' bloque_ejecutables '}'
 130              | ejecutables

 131  sentencia_if_for : If condicion_if then cuerpo_If_for end_if ';'
 132                   | If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if ';'
 133                   | If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if error
 134                   | If condicion_if then cuerpo_If_for error
 135                   | If condicion_if then cuerpo_If_for Else cuerpo_Else_for error ';'
 136                   | If condicion_if cuerpo_If_for error

 137  cuerpo_If_for : '{' bloque_sentencias_For '}'
 138                | sentencias_For

 139  cuerpo_Else_for : '{' bloque_sentencias_For '}'
 140                  | sentencias_For

 141  sentencia_when : when '(' condicion_for ')' then cuerpo_when ';'
 142                 | when condicion_for ')' then cuerpo_when ';' error
 143                 | when '(' condicion_for then cuerpo_when ';' error
 144                 | when '(' condicion_for ')' cuerpo_when ';' error

 145  cuerpo_when : '{' sentencia '}'
 146              | '{' sentencia error
 147              | sentencia '}' error

 148  cola_For : '{' bloque_sentencias_For '}' ';'
 149           | sentencias_For

 150  encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For
 151                 | For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error
 152                 | For id op_asignacion cte ';' condicion_for ';' signo id cola_For error
 153                 | For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error
 154                 | id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For

 155  condicion_for : id comparador cte

 156  signo : '+'
 157        | '-'

 158  sentencias_For : asignacion
 159                 | salida
 160                 | expresion_For
 161                 | sentencia_if_for
 162                 | sentencia_BREAK
 163                 | sentencia_CONTINUE
 164                 | declarativas error
 165                 | ret_fun error

 166  expresion_For : encabezado_For

 167  sentencia_BREAK : BREAK ';'
 168                  | BREAK cte ';'
 169                  | BREAK error

 170  sentencia_CONTINUE : CONTINUE ';'
 171                     | CONTINUE ':' id ';'
 172                     | CONTINUE id ';' error
 173                     | CONTINUE error

 174  condicion_if : '(' expresion_relacional ')'
 175               | expresion_relacional ')'
 176               | '(' expresion_relacional
 177               | expresion_relacional

 178  expresion_relacional : expresion comparador expresion

 179  list_param_invoc : factor
 180                   | list_param_invoc factor

 181  invocacion : cadena '(' list_param_invoc ')'

 182  expresion : expresion signo termino
 183            | termino

 184  termino : termino '*' factor
 185          | termino '/' factor
 186          | factor

 187  factor : id
 188         | cte
 189         | '-' cte
 190         | invocacion

 191  comparador : '<'
 192             | '>'
 193             | menorigual
 194             | mayorigual
 195             | '='
 196             | distinto

 197  tipo : i32
 198       | f32
=======
 103  cuerpo_then_for : then '{' bloque_sentencias_For '}'
 104                  | then sentencias_For
=======
 105  cuerpo_then_for : then '{' bloque_sentencias_For '}'
 106                  | then sentencias_For
>>>>>>> release

 107  cuerpo_Else_for : Else '{' bloque_sentencias_For '}'
 108                  | Else sentencias_For

 109  sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if ';'
 110                       | If condicion_if cuerpo_If_funcion end_if error
 111                       | If condicion_if cuerpo_If_funcion error

 112  cuerpo_If_funcion : cuerpo_then_funcion cuerpo_Else_funcion
 113                    | cuerpo_then_funcion
 114                    | cuerpo_Else_funcion error

 115  cuerpo_then_funcion : then '{' bloque_sentencias_ejecutables_funcion '}'
 116                      | then ejecutables_funcion

 117  cuerpo_Else_funcion : Else '{' bloque_sentencias_ejecutables_funcion '}'
 118                      | Else ejecutables_funcion

 119  sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion end_if ';'
 120                           | If condicion_if cuerpo_If_for_funcion end_if error
 121                           | If condicion_if cuerpo_If_for_funcion error

 122  cuerpo_If_for_funcion : then_if_for_funcion else_if_for_funcion
 123                        | then_if_for_funcion
 124                        | else_if_for_funcion error

 125  then_if_for_funcion : then '{' bloque_sentencias_For_funcion '}'
 126                      | then sentencias_For_funcion

 127  else_if_for_funcion : Else '{' bloque_sentencias_For_funcion '}'
 128                      | Else sentencias_For_funcion

 129  sentencia_when : when '(' condicion_for ')' cuerpo_when ';'
 130                 | when condicion_for ')' cuerpo_when ';' error
 131                 | when '(' condicion_for cuerpo_when ';' error

 132  cuerpo_when : then '{' sentencia '}'
 133              | then '{' sentencia error
 134              | then sentencia '}' error

 135  encabezado_For : For '(' detalles_for ')' cola_For
 136                 | For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error
 137                 | For id op_asignacion cte ';' condicion_for ';' signo id cola_For error
 138                 | For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error
 139                 | id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For

 140  detalles_for : asignacion_for ';' condicion_operacion_for

 141  condicion_operacion_for : condicion_for ';' operacion_for

 142  condicion_for : id comparador cte

 143  cola_For : '{' bloque_sentencias_For '}' ';'
 144           | sentencias_For

 145  signo : '+'
 146        | '-'

 147  sentencias_For : asignacion
 148                 | salida
 149                 | expresion_For
 150                 | sentencia_if_for
 151                 | invocacion_funcion
 152                 | sentencia_BREAK
 153                 | sentencia_CONTINUE
 154                 | declarativas error
 155                 | ret_fun error

 156  expresion_For : encabezado_For

 157  cola_For_funcion : '{' bloque_sentencias_For_funcion '}' ';'
 158                   | sentencias_For_funcion

 159  sentencia_for_funcion : For '(' detalles_for ')' cola_For_funcion
 160                        | For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error
 161                        | For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error
 162                        | For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error
 163                        | id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion

 164  asignacion_for : id op_asignacion cte

 165  operacion_for : signo id

 166  sentencias_For_funcion : asignacion
 167                         | salida
 168                         | sentencia_for_funcion
 169                         | ret_fun
 170                         | invocacion_funcion
 171                         | sentencia_BREAK
 172                         | sentencia_CONTINUE
 173                         | sentencia_if_for_funcion
 174                         | declarativas error

 175  bloque_sentencias_For_funcion : sentencias_For_funcion
 176                                | bloque_sentencias_For_funcion sentencias_For_funcion

 177  sentencia_BREAK : BREAK ';'
 178                  | BREAK cte ';'
 179                  | BREAK error

 180  sentencia_CONTINUE : CONTINUE ';'
 181                     | CONTINUE ':' id ';'
 182                     | CONTINUE id ';' error
 183                     | CONTINUE error

 184  invocacion_funcion : id '(' list_parametros ')' ';'
 185                     | id '(' ')' ';'

 186  list_parametros : factor ',' factor
 187                  | factor

 188  expresion_relacional : expresion comparador expresion

 189  expresion : expresion signo termino
 190            | termino

 191  termino : termino '*' factor
 192          | termino '/' factor
 193          | factor

<<<<<<< HEAD
 195  tipo : i32
 196       | f32
>>>>>>> release
=======
 194  factor : id
 195         | cte
 196         | '-' cte

 197  comparador : '<'
 198             | '>'
 199             | menorigual
 200             | mayorigual
 201             | '='
 202             | distinto

 203  tipo : i32
 204       | f32
>>>>>>> release

state 0
	$accept : . programa $end  (0)

	id  shift 1
	.  error

	programa  goto 2
	encabezado_prog  goto 3


state 1
	encabezado_prog : id .  (2)

	.  reduce 2


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : encabezado_prog . bloque_sentencias  (1)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 15
	'('  shift 16
	.  error

	bloque_sentencias  goto 17
	sentencia  goto 18
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
>>>>>>> release
	encabezado_For  goto 33


state 4
<<<<<<< HEAD
<<<<<<< HEAD
	asignacion : id . op_asignacion expresion ';'  (109)
	asignacion : id . op_asignacion expresion  (110)
	etiquetaFor : id . op_asignacion encabezado_For devolverValor  (112)
	encabezado_For : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)
=======
	asignacion : id . op_asignacion expresion ';'  (72)
	asignacion : id . op_asignacion expresion error  (73)
	asignacion : id . op_asignacion for_else_cte ';'  (74)
	encabezado_For : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (137)
>>>>>>> release

	opasignacion  shift 34
	':'  shift 35
	'='  shift 36
	.  error

	op_asignacion  goto 37


state 5
<<<<<<< HEAD
	sentencia_If : If . condicion_if then cuerpo_If end_if ';'  (121)
	sentencia_If : If . condicion_if then cuerpo_If Else cuerpo_Else end_if ';'  (122)
	sentencia_If : If . condicion_if then cuerpo_If Else cuerpo_Else end_if error  (123)
	sentencia_If : If . condicion_if then cuerpo_If error  (124)
	sentencia_If : If . condicion_if then cuerpo_If Else cuerpo_Else error ';'  (125)
	sentencia_If : If . condicion_if cuerpo_If error  (126)
=======
	sentencia_If : If . condicion_if cuerpo_If end_if ';'  (83)
	sentencia_If : If . condicion_if then cuerpo_If end_if error  (84)
	sentencia_If : If . condicion_if then cuerpo_If error  (85)
>>>>>>> release

	id  shift 38
	cte  shift 39
	cadena  shift 40
=======
	asignacion : id . op_asignacion expresion ';'  (74)
	asignacion : id . op_asignacion expresion error  (75)
	asignacion : id . op_asignacion for_else_cte ';'  (76)
	encabezado_For : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)
	invocacion_funcion : id . '(' list_parametros ')' ';'  (184)
	invocacion_funcion : id . '(' ')' ';'  (185)

	opasignacion  shift 34
	'('  shift 35
	':'  shift 36
	'='  shift 37
	.  error

	op_asignacion  goto 38


state 5
	sentencia_If : If . condicion_if cuerpo_If end_if ';'  (85)
	sentencia_If : If . condicion_if then cuerpo_If end_if error  (86)
	sentencia_If : If . condicion_if then cuerpo_If error  (87)

	id  shift 39
	cte  shift 40
>>>>>>> release
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 44
	expresion_relacional  goto 45
	factor  goto 46
<<<<<<< HEAD
	invocacion  goto 47
	termino  goto 48


state 6
<<<<<<< HEAD
	salida : out . '(' cadena ')' ';'  (115)
	salida : out . '(' cadena ')' error  (116)
	salida : out . '(' cadena error ';'  (117)
	salida : out . cadena error ';'  (118)
	salida : out . '(' ')' error ';'  (120)
=======
	salida : out . '(' cadena ')' ';'  (77)
	salida : out . '(' cadena ')' error  (78)
	salida : out . '(' cadena error ';'  (79)
	salida : out . cadena error ';'  (80)
	salida : out . '(' ')' error ';'  (82)
>>>>>>> release

	cadena  shift 49
	'('  shift 50
	.  error


state 7
	encabezado_func : fun . id '('  (39)
	encabezado_func : fun . '(' error  (40)

	id  shift 51
	'('  shift 52
	.  error


state 8
<<<<<<< HEAD
	sentencia_BREAK : BREAK . ';'  (167)
	sentencia_BREAK : BREAK . cte ';'  (168)
	sentencia_BREAK : BREAK . error  (169)
=======
	sentencia_BREAK : BREAK . ';'  (173)
	sentencia_BREAK : BREAK . cte ';'  (174)
	sentencia_BREAK : BREAK . error  (175)
>>>>>>> release

	error  shift 53
	cte  shift 54
	';'  shift 55
=======
	termino  goto 47


state 6
	salida : out . '(' cadena ')' ';'  (79)
	salida : out . '(' cadena ')' error  (80)
	salida : out . '(' cadena error ';'  (81)
	salida : out . cadena error ';'  (82)
	salida : out . '(' ')' error ';'  (84)

	cadena  shift 48
	'('  shift 49
	.  error


state 7
	encabezado_func : fun . id '('  (40)
	encabezado_func : fun . '(' error  (41)

	id  shift 50
	'('  shift 51
	.  error


state 8
	sentencia_BREAK : BREAK . ';'  (177)
	sentencia_BREAK : BREAK . cte ';'  (178)
	sentencia_BREAK : BREAK . error  (179)

	error  shift 52
	cte  shift 53
	';'  shift 54
>>>>>>> release
	.  error


state 9
<<<<<<< HEAD
<<<<<<< HEAD
	tipo : i32 .  (197)

	.  reduce 197


state 10
	sentencia_when : when . '(' condicion_for ')' then cuerpo_when ';'  (141)
	sentencia_when : when . condicion_for ')' then cuerpo_when ';' error  (142)
	sentencia_when : when . '(' condicion_for then cuerpo_when ';' error  (143)
	sentencia_when : when . '(' condicion_for ')' cuerpo_when ';' error  (144)
=======
	tipo : i32 .  (195)
=======
	tipo : i32 .  (203)
>>>>>>> release

	.  reduce 203


state 10
	sentencia_when : when . '(' condicion_for ')' cuerpo_when ';'  (129)
	sentencia_when : when . condicion_for ')' cuerpo_when ';' error  (130)
	sentencia_when : when . '(' condicion_for cuerpo_when ';' error  (131)

	id  shift 55
	'('  shift 56
	.  error

	condicion_for  goto 57


state 11
<<<<<<< HEAD
	encabezado_For : For . '(' detalles_for ')' cola_For  (133)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (134)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id cola_For error  (135)
	encabezado_For : For . '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (136)
>>>>>>> release
=======
	encabezado_For : For . '(' detalles_for ')' cola_For  (135)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (136)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id cola_For error  (137)
	encabezado_For : For . '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (138)
>>>>>>> release

	id  shift 58
	'('  shift 59
	.  error

	condicion_for  goto 58


state 11
	encabezado_For : For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (150)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (151)
	encabezado_For : For . id op_asignacion cte ';' condicion_for ';' signo id cola_For error  (152)
	encabezado_For : For . '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (153)

	id  shift 59
	'('  shift 60
	.  error


state 12
<<<<<<< HEAD
<<<<<<< HEAD
	sentencia_CONTINUE : CONTINUE . ';'  (170)
	sentencia_CONTINUE : CONTINUE . ':' id ';'  (171)
	sentencia_CONTINUE : CONTINUE . id ';' error  (172)
	sentencia_CONTINUE : CONTINUE . error  (173)
=======
	sentencia_CONTINUE : CONTINUE . ';'  (176)
	sentencia_CONTINUE : CONTINUE . ':' id ';'  (177)
	sentencia_CONTINUE : CONTINUE . id ';' error  (178)
	sentencia_CONTINUE : CONTINUE . error  (179)
>>>>>>> release

	error  shift 61
	id  shift 62
	';'  shift 63
	':'  shift 64
=======
	sentencia_CONTINUE : CONTINUE . ';'  (180)
	sentencia_CONTINUE : CONTINUE . ':' id ';'  (181)
	sentencia_CONTINUE : CONTINUE . id ';' error  (182)
	sentencia_CONTINUE : CONTINUE . error  (183)

	error  shift 60
	id  shift 61
	';'  shift 62
	':'  shift 63
>>>>>>> release
	.  error


state 13
<<<<<<< HEAD
<<<<<<< HEAD
	tipo : f32 .  (198)

	.  reduce 198
=======
	tipo : f32 .  (196)

	.  reduce 196
>>>>>>> release
=======
	tipo : f32 .  (204)

	.  reduce 204
>>>>>>> release


state 14
	declaracion_const : Const . lista_de_asignacion_const ';'  (7)
	declaracion_const : Const . lista_de_asignacion_const error  (8)
	declaracion_const : Const . ';' error  (9)

<<<<<<< HEAD
	id  shift 65
	';'  shift 66
	.  error

	lista_de_asignacion_const  goto 67
	decl_const  goto 68
=======
	id  shift 64
	';'  shift 65
	.  error

	lista_de_asignacion_const  goto 66
	decl_const  goto 67
>>>>>>> release


state 15
	bloque_sentencias : '{' . sentencia '}'  (4)
	bloque_sentencias : '{' . sentencia  (5)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

<<<<<<< HEAD
	sentencia  goto 69
=======
	sentencia  goto 68
>>>>>>> release
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
>>>>>>> release
	encabezado_For  goto 33


state 16
<<<<<<< HEAD
<<<<<<< HEAD
	salida : '(' . cadena error  (119)
=======
	salida : '(' . cadena error  (81)
>>>>>>> release

	cadena  shift 70
=======
	salida : '(' . cadena error  (83)

	cadena  shift 69
>>>>>>> release
	.  error


state 17
	programa : encabezado_prog bloque_sentencias .  (1)
	bloque_sentencias : bloque_sentencias . '{' sentencia '}'  (3)

<<<<<<< HEAD
	'{'  shift 71
=======
	'{'  shift 70
>>>>>>> release
	$end  reduce 1


state 18
	bloque_sentencias : sentencia . '}'  (6)
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'}'  shift 72
=======
	'}'  shift 71
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 73
	ejecutables  goto 74
=======
	declarativas  goto 72
	ejecutables  goto 73
>>>>>>> release
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
>>>>>>> release
	encabezado_For  goto 33


state 19
	declarativas : declaracion_const .  (26)

	.  reduce 26


state 20
	sentencia : declarativas .  (18)

	.  reduce 18


state 21
	sentencia : ejecutables .  (19)

	.  reduce 19


state 22
	declarativas : tipo . lista_de_variables ';'  (22)
	declarativas : tipo . lista_de_variables error  (23)
	declarativas : tipo . error  (24)

<<<<<<< HEAD
	error  shift 75
	id  shift 76
	.  error

	lista_de_variables  goto 77
=======
	error  shift 74
	id  shift 75
	.  error

	lista_de_variables  goto 76
>>>>>>> release


state 23
	declarativas : declaracion_func .  (25)

	.  reduce 25


state 24
	declarativas : sentencia_when .  (27)

	.  reduce 27


state 25
	ejecutables : asignacion .  (30)

	.  reduce 30


state 26
	ejecutables : salida .  (31)

	.  reduce 31


state 27
	ejecutables : sentencia_If .  (32)

	.  reduce 32


state 28
	ejecutables : expresion_For .  (33)

	.  reduce 33


state 29
	ejecutables : invocacion_funcion .  (34)

<<<<<<< HEAD
	error  shift 78
	.  error
=======
	.  reduce 34
>>>>>>> release


state 30
	ejecutables : sentencia_BREAK . error  (35)

<<<<<<< HEAD
	error  shift 79
=======
	error  shift 77
>>>>>>> release
	.  error


state 31
	ejecutables : sentencia_CONTINUE . error  (36)

<<<<<<< HEAD
	id  shift 80
	i32  shift 9
	f32  shift 13
	')'  shift 81
	.  error

	tipo  goto 82
	parametro  goto 83
	cola_func  goto 84


state 32
<<<<<<< HEAD
	asignacion : etiquetaFor .  (111)

	.  reduce 111


state 33
	expresion_For : encabezado_For .  (166)

	.  reduce 166


state 34
	op_asignacion : opasignacion .  (106)
=======
	expresion_For : encabezado_For .  (153)
=======
	error  shift 78
	.  error


state 32
	declaracion_func : encabezado_func . parametro cola_func  (47)
	declaracion_func : encabezado_func . parametro ',' parametro cola_func  (48)
	declaracion_func : encabezado_func . parametro ',' parametro ',' parametro cola_func  (49)
	declaracion_func : encabezado_func . cola_func  (50)
>>>>>>> release

	id  shift 79
	i32  shift 9
	f32  shift 13
	')'  shift 80
	.  error

	tipo  goto 81
	parametro  goto 82
	cola_func  goto 83


state 33
<<<<<<< HEAD
	op_asignacion : opasignacion .  (69)
>>>>>>> release
=======
	expresion_For : encabezado_For .  (156)
>>>>>>> release

	.  reduce 156


<<<<<<< HEAD
state 35
	op_asignacion : ':' . '='  (107)
	encabezado_For : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)
=======
state 34
<<<<<<< HEAD
	op_asignacion : ':' . '='  (70)
	encabezado_For : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (137)
>>>>>>> release

	For  shift 85
	'='  shift 86
	.  error


<<<<<<< HEAD
state 36
	op_asignacion : '=' .  (108)
=======
state 35
	op_asignacion : '=' .  (71)
>>>>>>> release
=======
	op_asignacion : opasignacion .  (71)
>>>>>>> release

	.  reduce 71


<<<<<<< HEAD
<<<<<<< HEAD
state 37
	asignacion : id op_asignacion . expresion ';'  (109)
	asignacion : id op_asignacion . expresion  (110)
	etiquetaFor : id op_asignacion . encabezado_For devolverValor  (112)
=======
state 36
	asignacion : id op_asignacion . expresion ';'  (72)
	asignacion : id op_asignacion . expresion error  (73)
	asignacion : id op_asignacion . for_else_cte ';'  (74)
>>>>>>> release

	id  shift 87
	cte  shift 39
	For  shift 11
	cadena  shift 40
	'-'  shift 42
	.  error

<<<<<<< HEAD
	expresion  goto 88
	encabezado_For  goto 89
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 38
	factor : id .  (187)
=======
	expresion_For  goto 85
	expresion  goto 86
	for_else_cte  goto 87
	encabezado_For  goto 32
	termino  goto 44
	factor  goto 45
=======
state 35
	invocacion_funcion : id '(' . list_parametros ')' ';'  (184)
	invocacion_funcion : id '(' . ')' ';'  (185)

	id  shift 39
	cte  shift 40
	')'  shift 84
	'-'  shift 42
	.  error

	list_parametros  goto 85
	factor  goto 86


state 36
	op_asignacion : ':' . '='  (72)
	encabezado_For : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)

	For  shift 87
	'='  shift 88
	.  error
>>>>>>> release


state 37
	op_asignacion : '=' .  (73)

	.  reduce 73


state 38
<<<<<<< HEAD
	factor : cte .  (187)
>>>>>>> release
=======
	asignacion : id op_asignacion . expresion ';'  (74)
	asignacion : id op_asignacion . expresion error  (75)
	asignacion : id op_asignacion . for_else_cte ';'  (76)
>>>>>>> release

	id  shift 89
	cte  shift 40
	For  shift 11
	'-'  shift 42
	.  error

	expresion_For  goto 90
	expresion  goto 91
	for_else_cte  goto 92
	encabezado_For  goto 33
	factor  goto 46
	termino  goto 47


state 39
<<<<<<< HEAD
<<<<<<< HEAD
	factor : cte .  (188)

	.  reduce 188


state 40
	invocacion : cadena . '(' list_param_invoc ')'  (181)

	'('  shift 90
=======
	condicion_if : '(' . expresion_relacional ')'  (86)
	condicion_if : '(' . expresion_relacional  (88)
=======
	factor : id .  (194)
>>>>>>> release

	.  reduce 194


state 40
	factor : cte .  (195)

<<<<<<< HEAD
	cte  shift 89
>>>>>>> release
	.  error


state 41
<<<<<<< HEAD
	condicion_if : '(' . expresion_relacional ')'  (174)
	condicion_if : '(' . expresion_relacional  (176)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	expresion  goto 43
	expresion_relacional  goto 91
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 42
	factor : '-' . cte  (189)

	cte  shift 92
	.  error


state 43
	expresion_relacional : expresion . comparador expresion  (178)
	expresion : expresion . signo termino  (182)

	menorigual  shift 93
	mayorigual  shift 94
	distinto  shift 95
	'='  shift 96
	'+'  shift 97
	'-'  shift 98
	'<'  shift 99
	'>'  shift 100
	.  error

	signo  goto 101
	comparador  goto 102


state 44
	sentencia_If : If condicion_if . then cuerpo_If end_if ';'  (121)
	sentencia_If : If condicion_if . then cuerpo_If Else cuerpo_Else end_if ';'  (122)
	sentencia_If : If condicion_if . then cuerpo_If Else cuerpo_Else end_if error  (123)
	sentencia_If : If condicion_if . then cuerpo_If error  (124)
	sentencia_If : If condicion_if . then cuerpo_If Else cuerpo_Else error ';'  (125)
	sentencia_If : If condicion_if . cuerpo_If error  (126)

	id  shift 4
	If  shift 5
	then  shift 103
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'{'  shift 104
	'('  shift 16
	.  error

	ejecutables  goto 105
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_If  goto 106


state 45
	condicion_if : expresion_relacional . ')'  (175)
	condicion_if : expresion_relacional .  (177)

	')'  shift 107
	id  reduce 177
	If  reduce 177
	then  reduce 177
	out  reduce 177
	fun  reduce 177
	Return  reduce 177
	BREAK  reduce 177
	i32  reduce 177
	when  reduce 177
	For  reduce 177
	CONTINUE  reduce 177
	f32  reduce 177
	Const  reduce 177
	'{'  reduce 177
	'('  reduce 177


state 46
	termino : factor .  (186)

	.  reduce 186


state 47
	factor : invocacion .  (190)

	.  reduce 190
=======
	expresion_relacional : expresion . comparador expresion  (180)
	expresion : expresion . signo termino  (181)
=======
	.  reduce 195


state 41
	condicion_if : '(' . expresion_relacional ')'  (88)
	condicion_if : '(' . expresion_relacional  (90)
>>>>>>> release

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	expresion  goto 43
	expresion_relacional  goto 93
	factor  goto 46
	termino  goto 47


state 42
	factor : '-' . cte  (196)

	cte  shift 94
	.  error


state 43
	expresion_relacional : expresion . comparador expresion  (188)
	expresion : expresion . signo termino  (189)

	menorigual  shift 95
	mayorigual  shift 96
	distinto  shift 97
	'='  shift 98
	'+'  shift 99
	'-'  shift 100
	'<'  shift 101
	'>'  shift 102
	.  error

	signo  goto 103
	comparador  goto 104


state 44
	sentencia_If : If condicion_if . cuerpo_If end_if ';'  (85)
	sentencia_If : If condicion_if . then cuerpo_If end_if error  (86)
	sentencia_If : If condicion_if . then cuerpo_If error  (87)

	then  shift 105
	Else  shift 106
	.  error

	cuerpo_If  goto 107
	cuerpo_Then  goto 108
	cuerpo_Else  goto 109


state 45
	condicion_if : expresion_relacional . ')'  (89)
	condicion_if : expresion_relacional .  (91)

	')'  shift 110
	then  reduce 91
	Else  reduce 91


state 46
	termino : factor .  (193)

	.  reduce 193


state 47
	expresion : termino .  (190)
	termino : termino . '*' factor  (191)
	termino : termino . '/' factor  (192)

<<<<<<< HEAD
	cadena  shift 109
	')'  shift 110
	.  error
>>>>>>> release


state 48
	expresion : termino .  (183)
	termino : termino . '*' factor  (184)
	termino : termino . '/' factor  (185)

<<<<<<< HEAD
	'*'  shift 108
	'/'  shift 109
	$end  reduce 183
	error  reduce 183
	id  reduce 183
	If  reduce 183
	then  reduce 183
	Else  reduce 183
	end_if  reduce 183
	out  reduce 183
	fun  reduce 183
	Return  reduce 183
	BREAK  reduce 183
	i32  reduce 183
	when  reduce 183
	For  reduce 183
	CONTINUE  reduce 183
	f32  reduce 183
	menorigual  reduce 183
	mayorigual  reduce 183
	distinto  reduce 183
	Const  reduce 183
	'{'  reduce 183
	'}'  reduce 183
	';'  reduce 183
	'('  reduce 183
	')'  reduce 183
	'='  reduce 183
	'+'  reduce 183
	'-'  reduce 183
	'<'  reduce 183
	'>'  reduce 183
=======
	'('  shift 111
=======
	'*'  shift 111
	'/'  shift 112
	error  reduce 190
	then  reduce 190
	Else  reduce 190
	menorigual  reduce 190
	mayorigual  reduce 190
	distinto  reduce 190
	';'  reduce 190
	')'  reduce 190
	'='  reduce 190
	'+'  reduce 190
	'-'  reduce 190
	'<'  reduce 190
	'>'  reduce 190


state 48
	salida : out cadena . error ';'  (82)

	error  shift 113
>>>>>>> release
	.  error
>>>>>>> release


state 49
<<<<<<< HEAD
	salida : out cadena . error ';'  (118)
=======
	salida : out '(' . cadena ')' ';'  (79)
	salida : out '(' . cadena ')' error  (80)
	salida : out '(' . cadena error ';'  (81)
	salida : out '(' . ')' error ';'  (84)
>>>>>>> release

	cadena  shift 114
	')'  shift 115
	.  error


state 50
<<<<<<< HEAD
<<<<<<< HEAD
	salida : out '(' . cadena ')' ';'  (115)
	salida : out '(' . cadena ')' error  (116)
	salida : out '(' . cadena error ';'  (117)
	salida : out '(' . ')' error ';'  (120)

	cadena  shift 111
	')'  shift 112
	.  error


state 51
	encabezado_func : fun id . '('  (39)

	'('  shift 113
=======
	sentencia_BREAK : BREAK error .  (175)
=======
	encabezado_func : fun id . '('  (40)
>>>>>>> release

	'('  shift 116
	.  error


state 51
	encabezado_func : fun '(' . error  (41)

<<<<<<< HEAD
	';'  shift 113
>>>>>>> release
=======
	error  shift 117
>>>>>>> release
	.  error


state 52
<<<<<<< HEAD
<<<<<<< HEAD
	encabezado_func : fun '(' . error  (40)

	error  shift 114
	.  error


state 53
	sentencia_BREAK : BREAK error .  (169)

	.  reduce 169


state 54
	sentencia_BREAK : BREAK cte . ';'  (168)
=======
	sentencia_BREAK : BREAK ';' .  (173)

	.  reduce 173


state 53
	condicion_for : id . comparador cte  (140)

	menorigual  shift 90
	mayorigual  shift 91
	distinto  shift 92
	'='  shift 93
	'<'  shift 96
	'>'  shift 97
	.  error

	comparador  goto 114


state 54
	sentencia_when : when '(' . condicion_for ')' cuerpo_when ';'  (127)
	sentencia_when : when '(' . condicion_for cuerpo_when ';' error  (129)
>>>>>>> release

	';'  shift 115
	.  error

<<<<<<< HEAD

state 55
	sentencia_BREAK : BREAK ';' .  (167)

	.  reduce 167


state 56
	condicion_for : id . comparador cte  (155)

	menorigual  shift 93
	mayorigual  shift 94
	distinto  shift 95
	'='  shift 96
	'<'  shift 99
	'>'  shift 100
	.  error

	comparador  goto 116


state 57
	sentencia_when : when '(' . condicion_for ')' then cuerpo_when ';'  (141)
	sentencia_when : when '(' . condicion_for then cuerpo_when ';' error  (143)
	sentencia_when : when '(' . condicion_for ')' cuerpo_when ';' error  (144)

	id  shift 56
	.  error

	condicion_for  goto 117


state 58
	sentencia_when : when condicion_for . ')' then cuerpo_when ';' error  (142)

	')'  shift 118
	.  error


state 59
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (151)
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For error  (152)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
=======
	condicion_for  goto 115


state 55
	sentencia_when : when condicion_for . ')' cuerpo_when ';' error  (128)

	')'  shift 116
	.  error


state 56
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (134)
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For error  (135)

	opasignacion  shift 33
	':'  shift 117
	'='  shift 35
	.  error

	op_asignacion  goto 118


state 57
	encabezado_For : For '(' . detalles_for ')' cola_For  (133)
	encabezado_For : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (136)

	id  shift 119
	.  error

	detalles_for  goto 120
	asignacion_for  goto 121


state 58
	sentencia_CONTINUE : CONTINUE error .  (179)
=======
	sentencia_BREAK : BREAK error .  (179)
>>>>>>> release

	.  reduce 179


state 53
	sentencia_BREAK : BREAK cte . ';'  (178)

<<<<<<< HEAD
	';'  shift 122
>>>>>>> release
=======
	';'  shift 118
>>>>>>> release
	.  error

	op_asignacion  goto 120


<<<<<<< HEAD
state 60
<<<<<<< HEAD
	encabezado_For : For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (150)
	encabezado_For : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (153)

	id  shift 121
=======
	sentencia_CONTINUE : CONTINUE ';' .  (176)
=======
state 54
	sentencia_BREAK : BREAK ';' .  (177)
>>>>>>> release

	.  reduce 177


state 55
	condicion_for : id . comparador cte  (142)

	menorigual  shift 95
	mayorigual  shift 96
	distinto  shift 97
	'='  shift 98
	'<'  shift 101
	'>'  shift 102
	.  error

	comparador  goto 119


state 56
	sentencia_when : when '(' . condicion_for ')' cuerpo_when ';'  (129)
	sentencia_when : when '(' . condicion_for cuerpo_when ';' error  (131)

	id  shift 55
	.  error

	condicion_for  goto 120


state 57
	sentencia_when : when condicion_for . ')' cuerpo_when ';' error  (130)

	')'  shift 121
	.  error


state 58
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error  (136)
	encabezado_For : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For error  (137)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 123


state 59
	encabezado_For : For '(' . detalles_for ')' cola_For  (135)
	encabezado_For : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (138)

	id  shift 124
	.  error

	detalles_for  goto 125
	asignacion_for  goto 126


state 60
	sentencia_CONTINUE : CONTINUE error .  (183)

	.  reduce 183


state 61
	sentencia_CONTINUE : CONTINUE id . ';' error  (182)

<<<<<<< HEAD
	id  shift 123
>>>>>>> release
=======
	';'  shift 127
>>>>>>> release
	.  error


state 61
	sentencia_CONTINUE : CONTINUE error .  (173)

	.  reduce 173


state 62
<<<<<<< HEAD
	sentencia_CONTINUE : CONTINUE id . ';' error  (172)

	';'  shift 122
	.  error


state 63
	sentencia_CONTINUE : CONTINUE ';' .  (170)

	.  reduce 170


state 64
	sentencia_CONTINUE : CONTINUE ':' . id ';'  (171)

	id  shift 123
	.  error


state 65
=======
	sentencia_CONTINUE : CONTINUE ';' .  (180)

	.  reduce 180


state 63
	sentencia_CONTINUE : CONTINUE ':' . id ';'  (181)

	id  shift 128
	.  error


state 64
>>>>>>> release
	decl_const : id . op_asignacion cte  (12)
	decl_const : id . op_asignacion error  (13)
	decl_const : id . cte error  (14)
	decl_const : id . error  (15)

<<<<<<< HEAD
	error  shift 124
	cte  shift 125
<<<<<<< HEAD
	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
=======
	opasignacion  shift 33
	':'  shift 117
	'='  shift 35
>>>>>>> release
=======
	error  shift 129
	cte  shift 130
	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
>>>>>>> release
	.  error

	op_asignacion  goto 131


<<<<<<< HEAD
state 66
=======
state 65
>>>>>>> release
	declaracion_const : Const ';' . error  (9)

	error  shift 132
	.  error


<<<<<<< HEAD
state 67
=======
state 66
>>>>>>> release
	declaracion_const : Const lista_de_asignacion_const . ';'  (7)
	declaracion_const : Const lista_de_asignacion_const . error  (8)
	lista_de_asignacion_const : lista_de_asignacion_const . ',' decl_const  (11)

	error  shift 133
	';'  shift 134
	','  shift 135
	.  error


<<<<<<< HEAD
state 68
=======
state 67
>>>>>>> release
	lista_de_asignacion_const : decl_const .  (10)

	.  reduce 10


<<<<<<< HEAD
state 69
=======
state 68
>>>>>>> release
	bloque_sentencias : '{' sentencia . '}'  (4)
	bloque_sentencias : '{' sentencia .  (5)
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 136
	'('  shift 16
	$end  reduce 5
	'{'  reduce 5

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 73
	ejecutables  goto 74
=======
	declarativas  goto 72
	ejecutables  goto 73
>>>>>>> release
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33


<<<<<<< HEAD
state 70
	salida : '(' cadena . error  (119)
=======
state 67
	salida : '(' cadena . error  (81)
>>>>>>> release
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


state 69
	salida : '(' cadena . error  (83)
>>>>>>> release

	error  shift 137
	.  error


<<<<<<< HEAD
state 71
=======
state 70
>>>>>>> release
	bloque_sentencias : bloque_sentencias '{' . sentencia '}'  (3)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	sentencia  goto 138
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 72
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


state 71
>>>>>>> release
	bloque_sentencias : sentencia '}' .  (6)

	.  reduce 6


<<<<<<< HEAD
state 73
=======
state 72
>>>>>>> release
	sentencia : sentencia declarativas .  (20)

	.  reduce 20


<<<<<<< HEAD
state 74
=======
state 73
>>>>>>> release
	sentencia : sentencia ejecutables .  (21)

	.  reduce 21


<<<<<<< HEAD
state 75
=======
state 74
>>>>>>> release
	declarativas : tipo error .  (24)

	.  reduce 24


<<<<<<< HEAD
state 76
	lista_de_variables : id .  (36)

	.  reduce 36


state 77
	declarativas : tipo lista_de_variables . ';'  (22)
	declarativas : tipo lista_de_variables . error  (23)
	lista_de_variables : lista_de_variables . ',' id  (37)
	lista_de_variables : lista_de_variables . id  (38)

	error  shift 134
	id  shift 135
	';'  shift 136
	','  shift 137
	.  error


state 78
	ejecutables : sentencia_BREAK error .  (34)
=======
state 75
	lista_de_variables : id .  (37)
>>>>>>> release

	.  reduce 37


<<<<<<< HEAD
state 79
	ejecutables : sentencia_CONTINUE error .  (35)
=======
state 76
	declarativas : tipo lista_de_variables . ';'  (22)
	declarativas : tipo lista_de_variables . error  (23)
	lista_de_variables : lista_de_variables . ',' id  (38)
	lista_de_variables : lista_de_variables . id error  (39)

	error  shift 139
	id  shift 140
	';'  shift 141
	','  shift 142
	.  error


state 77
	ejecutables : sentencia_BREAK error .  (35)
>>>>>>> release

	.  reduce 35


<<<<<<< HEAD
state 80
	parametro : id . error  (42)

	error  shift 138
	.  error


state 81
	cola_func : ')' . asig_fun '{' cuerpo_fun '}'  (45)
	asig_fun : .  (44)
=======
state 78
	ejecutables : sentencia_CONTINUE error .  (36)
>>>>>>> release

	.  reduce 36


<<<<<<< HEAD
state 82
	parametro : tipo . id  (41)
=======
state 79
	parametro : id . error  (43)
>>>>>>> release

	error  shift 143
	.  error


<<<<<<< HEAD
state 83
	declaracion_func : encabezado_func parametro . cola_func  (46)
	declaracion_func : encabezado_func parametro . ',' parametro cola_func  (47)
	declaracion_func : encabezado_func parametro . ',' parametro ',' parametro cola_func  (48)

	','  shift 142
<<<<<<< HEAD
	')'  shift 81
=======
	')'  shift 78
>>>>>>> release
	.  error
=======
state 80
	cola_func : ')' . asig_fun '{' cuerpo_fun '}'  (46)
	asig_fun : .  (45)

	':'  shift 144
	'{'  reduce 45
>>>>>>> release

	asig_fun  goto 145


<<<<<<< HEAD
state 84
	declaracion_func : encabezado_func cola_func .  (49)

	.  reduce 49


<<<<<<< HEAD
state 85
	encabezado_For : id ':' For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)
=======
state 82
	encabezado_For : id ':' For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (137)
>>>>>>> release

	'('  shift 144
	.  error


<<<<<<< HEAD
state 86
	op_asignacion : ':' '=' .  (107)
=======
state 83
	op_asignacion : ':' '=' .  (70)
>>>>>>> release
=======
state 81
	parametro : tipo . id  (42)

	id  shift 146
	.  error


state 82
	declaracion_func : encabezado_func parametro . cola_func  (47)
	declaracion_func : encabezado_func parametro . ',' parametro cola_func  (48)
	declaracion_func : encabezado_func parametro . ',' parametro ',' parametro cola_func  (49)
>>>>>>> release

	','  shift 147
	')'  shift 80
	.  error

	cola_func  goto 148


state 83
	declaracion_func : encabezado_func cola_func .  (50)

	.  reduce 50


<<<<<<< HEAD
state 87
	encabezado_For : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)
	factor : id .  (187)

	':'  shift 145
	$end  reduce 187
	error  reduce 187
	id  reduce 187
	If  reduce 187
	Else  reduce 187
	end_if  reduce 187
	out  reduce 187
	fun  reduce 187
	Return  reduce 187
	BREAK  reduce 187
	i32  reduce 187
	when  reduce 187
	For  reduce 187
	CONTINUE  reduce 187
	f32  reduce 187
	Const  reduce 187
	'{'  reduce 187
	'}'  reduce 187
	';'  reduce 187
	'('  reduce 187
	'+'  reduce 187
	'-'  reduce 187
	'*'  reduce 187
	'/'  reduce 187


state 88
	asignacion : id op_asignacion expresion . ';'  (109)
	asignacion : id op_asignacion expresion .  (110)
	expresion : expresion . signo termino  (182)

	';'  shift 146
	'+'  shift 97
	'-'  shift 98
	$end  reduce 110
	error  reduce 110
	id  reduce 110
	If  reduce 110
	Else  reduce 110
	end_if  reduce 110
	out  reduce 110
	fun  reduce 110
	Return  reduce 110
	BREAK  reduce 110
	i32  reduce 110
	when  reduce 110
	For  reduce 110
	CONTINUE  reduce 110
	f32  reduce 110
	Const  reduce 110
	'{'  reduce 110
	'}'  reduce 110
	'('  reduce 110

	signo  goto 101


state 89
	etiquetaFor : id op_asignacion encabezado_For . devolverValor  (112)

	error  shift 147
	Else  shift 148
	.  error

	devolverValor  goto 149


state 90
	invocacion : cadena '(' . list_param_invoc ')'  (181)
=======
state 84
	invocacion_funcion : id '(' ')' . ';'  (185)

	';'  shift 149
	.  error


state 85
	invocacion_funcion : id '(' list_parametros . ')' ';'  (184)

	')'  shift 150
	.  error


state 86
	list_parametros : factor . ',' factor  (186)
	list_parametros : factor .  (187)

	','  shift 151
	')'  reduce 187


state 87
	encabezado_For : id ':' For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)

	'('  shift 152
	.  error


state 88
	op_asignacion : ':' '=' .  (72)

	.  reduce 72


state 89
<<<<<<< HEAD
	factor : '-' cte .  (188)
>>>>>>> release

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	list_param_invoc  goto 150
	factor  goto 151
	invocacion  goto 47
=======
	encabezado_For : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)
	factor : id .  (194)

	':'  shift 153
	error  reduce 194
	';'  reduce 194
	'+'  reduce 194
	'-'  reduce 194
	'*'  reduce 194
	'/'  reduce 194
>>>>>>> release


<<<<<<< HEAD
state 91
	condicion_if : '(' expresion_relacional . ')'  (174)
	condicion_if : '(' expresion_relacional .  (176)

	')'  shift 152
	id  reduce 176
	If  reduce 176
	then  reduce 176
	out  reduce 176
	fun  reduce 176
	Return  reduce 176
	BREAK  reduce 176
	i32  reduce 176
	when  reduce 176
	For  reduce 176
	CONTINUE  reduce 176
	f32  reduce 176
	Const  reduce 176
	'{'  reduce 176
	'('  reduce 176


state 92
	factor : '-' cte .  (189)

	.  reduce 189


state 93
	comparador : menorigual .  (193)
=======
state 90
	for_else_cte : expresion_For . Else cte  (77)
	for_else_cte : expresion_For . error  (78)

	error  shift 154
	Else  shift 155
	.  error


state 91
	asignacion : id op_asignacion expresion . ';'  (74)
	asignacion : id op_asignacion expresion . error  (75)
	expresion : expresion . signo termino  (189)

	error  shift 156
	';'  shift 157
	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 103


state 92
	asignacion : id op_asignacion for_else_cte . ';'  (76)

	';'  shift 158
	.  error


state 93
<<<<<<< HEAD
	comparador : '=' .  (193)
>>>>>>> release
=======
	condicion_if : '(' expresion_relacional . ')'  (88)
	condicion_if : '(' expresion_relacional .  (90)
>>>>>>> release

	')'  shift 159
	then  reduce 90
	Else  reduce 90


state 94
<<<<<<< HEAD
<<<<<<< HEAD
	comparador : mayorigual .  (194)

	.  reduce 194


state 95
	comparador : distinto .  (196)

	.  reduce 196


state 96
	comparador : '=' .  (195)

	.  reduce 195


state 97
	signo : '+' .  (156)

	.  reduce 156


state 98
	signo : '-' .  (157)

	.  reduce 157


state 99
	comparador : '<' .  (191)

	.  reduce 191


state 100
	comparador : '>' .  (192)

	.  reduce 192


state 101
	expresion : expresion signo . termino  (182)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	factor  goto 46
	invocacion  goto 47
	termino  goto 153


state 102
	expresion_relacional : expresion comparador . expresion  (178)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	expresion  goto 154
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 103
	sentencia_If : If condicion_if then . cuerpo_If end_if ';'  (121)
	sentencia_If : If condicion_if then . cuerpo_If Else cuerpo_Else end_if ';'  (122)
	sentencia_If : If condicion_if then . cuerpo_If Else cuerpo_Else end_if error  (123)
	sentencia_If : If condicion_if then . cuerpo_If error  (124)
	sentencia_If : If condicion_if then . cuerpo_If Else cuerpo_Else error ';'  (125)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'{'  shift 104
	'('  shift 16
	.  error

	ejecutables  goto 105
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_If  goto 155


state 104
	cuerpo_If : '{' . bloque_ejecutables '}'  (127)

	id  shift 4
	If  shift 5
=======
	signo : '+' .  (143)
=======
	factor : '-' cte .  (196)
>>>>>>> release

	.  reduce 196


state 95
	comparador : menorigual .  (199)

	.  reduce 199


state 96
	comparador : mayorigual .  (200)

	.  reduce 200


state 97
	comparador : distinto .  (202)

	.  reduce 202


state 98
	comparador : '=' .  (201)

	.  reduce 201


state 99
	signo : '+' .  (145)

	.  reduce 145


state 100
	signo : '-' .  (146)

<<<<<<< HEAD
	id  shift 4
	If  shift 5
	then  shift 154
	Else  shift 101
>>>>>>> release
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
<<<<<<< HEAD
=======
	'{'  shift 155
>>>>>>> release
	'('  shift 16
	.  error

	ejecutables  goto 156
<<<<<<< HEAD
	bloque_ejecutables  goto 157
=======
>>>>>>> release
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
<<<<<<< HEAD
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 105
	cuerpo_If : ejecutables .  (128)

	.  reduce 128


state 106
	sentencia_If : If condicion_if cuerpo_If . error  (126)

	error  shift 158
	.  error


state 107
	condicion_if : expresion_relacional ')' .  (175)

	.  reduce 175


state 108
	termino : termino '*' . factor  (184)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	factor  goto 159
	invocacion  goto 47


state 109
	termino : termino '/' . factor  (185)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

	factor  goto 160
	invocacion  goto 47


state 110
	salida : out cadena error . ';'  (118)

	';'  shift 161
	.  error


state 111
	salida : out '(' cadena . ')' ';'  (115)
	salida : out '(' cadena . ')' error  (116)
	salida : out '(' cadena . error ';'  (117)

	error  shift 162
	')'  shift 163
	.  error


state 112
	salida : out '(' ')' . error ';'  (120)

	error  shift 164
	.  error


state 113
	encabezado_func : fun id '(' .  (39)

	.  reduce 39


state 114
	encabezado_func : fun '(' error .  (40)

	.  reduce 40


state 115
	sentencia_BREAK : BREAK cte ';' .  (168)

	.  reduce 168


state 116
	condicion_for : id comparador . cte  (155)

	cte  shift 165
	.  error


state 117
	sentencia_when : when '(' condicion_for . ')' then cuerpo_when ';'  (141)
	sentencia_when : when '(' condicion_for . then cuerpo_when ';' error  (143)
	sentencia_when : when '(' condicion_for . ')' cuerpo_when ';' error  (144)

	then  shift 166
	')'  shift 167
	.  error


state 118
	sentencia_when : when condicion_for ')' . then cuerpo_when ';' error  (142)

	then  shift 168
	.  error


state 119
	op_asignacion : ':' . '='  (107)

	'='  shift 86
	.  error


state 120
	encabezado_For : For id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion . cte ';' condicion_for ';' signo id cola_For error  (152)

	cte  shift 169
	.  error


state 121
	encabezado_For : For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (150)
	encabezado_For : For '(' id . op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (153)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
	.  error

	op_asignacion  goto 170


state 122
	sentencia_CONTINUE : CONTINUE id ';' . error  (172)

	error  shift 171
	.  error


state 123
	sentencia_CONTINUE : CONTINUE ':' id . ';'  (171)

	';'  shift 172
	.  error


state 124
	decl_const : id error .  (15)

	.  reduce 15


state 125
	decl_const : id cte . error  (14)

	error  shift 173
	.  error


state 126
	decl_const : id op_asignacion . cte  (12)
	decl_const : id op_asignacion . error  (13)

	error  shift 174
	cte  shift 175
	.  error


state 127
	declaracion_const : Const ';' error .  (9)

	.  reduce 9


state 128
	declaracion_const : Const lista_de_asignacion_const error .  (8)

	.  reduce 8


state 129
	declaracion_const : Const lista_de_asignacion_const ';' .  (7)

	.  reduce 7


state 130
	lista_de_asignacion_const : lista_de_asignacion_const ',' . decl_const  (11)

	id  shift 65
	.  error

	decl_const  goto 176


state 131
	bloque_sentencias : '{' sentencia '}' .  (4)

	.  reduce 4


state 132
	salida : '(' cadena error .  (119)

	.  reduce 119


state 133
	bloque_sentencias : bloque_sentencias '{' sentencia . '}'  (3)
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 177
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 73
	ejecutables  goto 74
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 134
	declarativas : tipo lista_de_variables error .  (23)

	.  reduce 23


state 135
	lista_de_variables : lista_de_variables id .  (38)

	.  reduce 38


state 136
	declarativas : tipo lista_de_variables ';' .  (22)

	.  reduce 22


state 137
	lista_de_variables : lista_de_variables ',' . id  (37)

	id  shift 178
	.  error


state 138
	parametro : id error .  (42)

	.  reduce 42


state 139
	asig_fun : ':' . tipo  (43)

	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 179


state 140
	cola_func : ')' asig_fun . '{' cuerpo_fun '}'  (45)

	'{'  shift 180
	.  error


state 141
	parametro : tipo id .  (41)

	.  reduce 41


state 142
	declaracion_func : encabezado_func parametro ',' . parametro cola_func  (47)
	declaracion_func : encabezado_func parametro ',' . parametro ',' parametro cola_func  (48)

	id  shift 80
	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 82
	parametro  goto 181


state 143
	declaracion_func : encabezado_func parametro cola_func .  (46)

	.  reduce 46


state 144
	encabezado_For : id ':' For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)

	id  shift 182
	.  error


state 145
	encabezado_For : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)

	For  shift 85
	.  error


state 146
	asignacion : id op_asignacion expresion ';' .  (109)

	.  reduce 109


state 147
	devolverValor : error .  (114)

	.  reduce 114


state 148
	devolverValor : Else . cte ';'  (113)

	cte  shift 183
	.  error


state 149
	etiquetaFor : id op_asignacion encabezado_For devolverValor .  (112)

	.  reduce 112


state 150
	list_param_invoc : list_param_invoc . factor  (180)
	invocacion : cadena '(' list_param_invoc . ')'  (181)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	')'  shift 184
	'-'  shift 42
	.  error

	factor  goto 185
	invocacion  goto 47


state 151
	list_param_invoc : factor .  (179)

	.  reduce 179


state 152
	condicion_if : '(' expresion_relacional ')' .  (174)

	.  reduce 174


state 153
	expresion : expresion signo termino .  (182)
	termino : termino . '*' factor  (184)
	termino : termino . '/' factor  (185)

	'*'  shift 108
	'/'  shift 109
	$end  reduce 182
	error  reduce 182
	id  reduce 182
	If  reduce 182
	then  reduce 182
	Else  reduce 182
	end_if  reduce 182
	out  reduce 182
	fun  reduce 182
	Return  reduce 182
	BREAK  reduce 182
	i32  reduce 182
	when  reduce 182
	For  reduce 182
	CONTINUE  reduce 182
	f32  reduce 182
	menorigual  reduce 182
	mayorigual  reduce 182
	distinto  reduce 182
	Const  reduce 182
	'{'  reduce 182
	'}'  reduce 182
	';'  reduce 182
	'('  reduce 182
	')'  reduce 182
	'='  reduce 182
	'+'  reduce 182
	'-'  reduce 182
	'<'  reduce 182
	'>'  reduce 182


state 154
	expresion_relacional : expresion comparador expresion .  (178)
	expresion : expresion . signo termino  (182)

	'+'  shift 97
	'-'  shift 98
	id  reduce 178
	If  reduce 178
	then  reduce 178
	out  reduce 178
	fun  reduce 178
	Return  reduce 178
	BREAK  reduce 178
	i32  reduce 178
	when  reduce 178
	For  reduce 178
	CONTINUE  reduce 178
	f32  reduce 178
	Const  reduce 178
	'{'  reduce 178
	'('  reduce 178
	')'  reduce 178

	signo  goto 101


state 155
	sentencia_If : If condicion_if then cuerpo_If . end_if ';'  (121)
	sentencia_If : If condicion_if then cuerpo_If . Else cuerpo_Else end_if ';'  (122)
	sentencia_If : If condicion_if then cuerpo_If . Else cuerpo_Else end_if error  (123)
	sentencia_If : If condicion_if then cuerpo_If . error  (124)
	sentencia_If : If condicion_if then cuerpo_If . Else cuerpo_Else error ';'  (125)

	error  shift 186
	Else  shift 187
	end_if  shift 188
	.  error


state 156
	bloque_ejecutables : ejecutables .  (29)
=======
	cuerpo_If  goto 157
	cuerpo_Then  goto 103
	cuerpo_Else  goto 104
	encabezado_For  goto 32
=======
	.  reduce 146
>>>>>>> release


state 101
	comparador : '<' .  (197)

	.  reduce 197


state 102
	comparador : '>' .  (198)

	.  reduce 198


state 103
	expresion : expresion signo . termino  (189)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	factor  goto 46
	termino  goto 160


state 104
	expresion_relacional : expresion comparador . expresion  (188)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	expresion  goto 161
	factor  goto 46
	termino  goto 47


state 105
	sentencia_If : If condicion_if then . cuerpo_If end_if error  (86)
	sentencia_If : If condicion_if then . cuerpo_If error  (87)
	cuerpo_Then : then . '{' bloque_ejecutables '}'  (95)
	cuerpo_Then : then . ejecutables  (96)

	id  shift 4
	If  shift 5
	then  shift 162
	Else  shift 106
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'{'  shift 163
	'('  shift 16
	.  error

	ejecutables  goto 164
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	cuerpo_If  goto 165
	cuerpo_Then  goto 108
	cuerpo_Else  goto 109
	encabezado_For  goto 33


state 106
	cuerpo_Else : Else . '{' bloque_ejecutables '}'  (97)
	cuerpo_Else : Else . ejecutables  (98)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'{'  shift 166
	'('  shift 16
	.  error

	ejecutables  goto 167
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


state 107
	sentencia_If : If condicion_if cuerpo_If . end_if ';'  (85)

	end_if  shift 168
	.  error


state 108
	cuerpo_If : cuerpo_Then . cuerpo_Else  (92)
	cuerpo_If : cuerpo_Then .  (93)

	Else  shift 106
	error  reduce 93
	end_if  reduce 93

	cuerpo_Else  goto 169


state 109
	cuerpo_If : cuerpo_Else .  (94)

	.  reduce 94


state 110
	condicion_if : expresion_relacional ')' .  (89)

	.  reduce 89


state 111
	termino : termino '*' . factor  (191)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	factor  goto 170


state 112
	termino : termino '/' . factor  (192)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	factor  goto 171


state 113
	salida : out cadena error . ';'  (82)

	';'  shift 172
	.  error


state 114
	salida : out '(' cadena . ')' ';'  (79)
	salida : out '(' cadena . ')' error  (80)
	salida : out '(' cadena . error ';'  (81)

	error  shift 173
	')'  shift 174
	.  error


state 115
	salida : out '(' ')' . error ';'  (84)

	error  shift 175
	.  error


state 116
	encabezado_func : fun id '(' .  (40)

	.  reduce 40


state 117
	encabezado_func : fun '(' error .  (41)

	.  reduce 41


state 118
	sentencia_BREAK : BREAK cte ';' .  (178)

	.  reduce 178


state 119
	condicion_for : id comparador . cte  (142)

	cte  shift 176
	.  error


state 120
	sentencia_when : when '(' condicion_for . ')' cuerpo_when ';'  (129)
	sentencia_when : when '(' condicion_for . cuerpo_when ';' error  (131)

	then  shift 177
	')'  shift 178
	.  error

	cuerpo_when  goto 179


state 121
	sentencia_when : when condicion_for ')' . cuerpo_when ';' error  (130)

	then  shift 177
	.  error

	cuerpo_when  goto 180


state 122
	op_asignacion : ':' . '='  (72)

	'='  shift 88
	.  error


state 123
	encabezado_For : For id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion . cte ';' condicion_for ';' signo id cola_For error  (137)

	cte  shift 181
	.  error


state 124
	encabezado_For : For '(' id . op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error  (138)
	asignacion_for : id . op_asignacion cte  (164)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 182


state 125
	encabezado_For : For '(' detalles_for . ')' cola_For  (135)

	')'  shift 183
	.  error


state 126
	detalles_for : asignacion_for . ';' condicion_operacion_for  (140)

	';'  shift 184
	.  error


state 127
	sentencia_CONTINUE : CONTINUE id ';' . error  (182)

	error  shift 185
	.  error


state 128
	sentencia_CONTINUE : CONTINUE ':' id . ';'  (181)

	';'  shift 186
	.  error


state 129
	decl_const : id error .  (15)

	.  reduce 15


state 130
	decl_const : id cte . error  (14)

	error  shift 187
	.  error


state 131
	decl_const : id op_asignacion . cte  (12)
	decl_const : id op_asignacion . error  (13)

	error  shift 188
	cte  shift 189
	.  error


state 132
	declaracion_const : Const ';' error .  (9)

	.  reduce 9


state 133
	declaracion_const : Const lista_de_asignacion_const error .  (8)

	.  reduce 8


state 134
	declaracion_const : Const lista_de_asignacion_const ';' .  (7)

	.  reduce 7


state 135
	lista_de_asignacion_const : lista_de_asignacion_const ',' . decl_const  (11)

	id  shift 64
	.  error

	decl_const  goto 190


state 136
	bloque_sentencias : '{' sentencia '}' .  (4)

	.  reduce 4


state 137
	salida : '(' cadena error .  (83)

	.  reduce 83


state 138
	bloque_sentencias : bloque_sentencias '{' sentencia . '}'  (3)
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 191
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 72
	ejecutables  goto 73
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


state 139
	declarativas : tipo lista_de_variables error .  (23)

	.  reduce 23


state 140
	lista_de_variables : lista_de_variables id . error  (39)

	error  shift 192
	.  error


state 141
	declarativas : tipo lista_de_variables ';' .  (22)

	.  reduce 22


state 142
	lista_de_variables : lista_de_variables ',' . id  (38)

	id  shift 193
	.  error


state 143
	parametro : id error .  (43)

	.  reduce 43


state 144
	asig_fun : ':' . tipo  (44)

	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 194


state 145
	cola_func : ')' asig_fun . '{' cuerpo_fun '}'  (46)

	'{'  shift 195
	.  error


state 146
	parametro : tipo id .  (42)

	.  reduce 42


state 147
	declaracion_func : encabezado_func parametro ',' . parametro cola_func  (48)
	declaracion_func : encabezado_func parametro ',' . parametro ',' parametro cola_func  (49)

	id  shift 79
	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 81
	parametro  goto 196


state 148
<<<<<<< HEAD
	asignacion : id op_asignacion expresion error .  (73)
>>>>>>> release
=======
	declaracion_func : encabezado_func parametro cola_func .  (47)
>>>>>>> release

	.  reduce 47


state 149
	invocacion_funcion : id '(' ')' ';' .  (185)

	.  reduce 185


state 150
<<<<<<< HEAD
	asignacion : id op_asignacion for_else_cte ';' .  (74)

	.  reduce 74


<<<<<<< HEAD
state 157
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_If : '{' bloque_ejecutables . '}'  (127)
=======
state 151
	condicion_if : '(' expresion_relacional ')' .  (86)

	.  reduce 86


state 152
	expresion : expresion signo termino .  (181)
	termino : termino . '*' factor  (183)
	termino : termino . '/' factor  (184)

	'*'  shift 106
	'/'  shift 107
	error  reduce 181
	then  reduce 181
	Else  reduce 181
	menorigual  reduce 181
	mayorigual  reduce 181
	distinto  reduce 181
	';'  reduce 181
	')'  reduce 181
	'='  reduce 181
	'+'  reduce 181
	'-'  reduce 181
	'<'  reduce 181
	'>'  reduce 181


state 153
	expresion_relacional : expresion comparador expresion .  (180)
	expresion : expresion . signo termino  (181)

	'+'  shift 94
	'-'  shift 95
	then  reduce 180
	Else  reduce 180
	')'  reduce 180

	signo  goto 98


state 154
	cuerpo_Then : then . '{' bloque_ejecutables '}'  (93)
	cuerpo_Then : then . ejecutables  (94)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
<<<<<<< HEAD
	'}'  shift 189
	'('  shift 16
	.  error

	ejecutables  goto 190
=======
	'{'  shift 155
	'('  shift 16
	.  error

	ejecutables  goto 156
>>>>>>> release
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
<<<<<<< HEAD
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 158
	sentencia_If : If condicion_if cuerpo_If error .  (126)

	.  reduce 126
=======
	encabezado_For  goto 32


state 155
	cuerpo_Then : then '{' . bloque_ejecutables '}'  (93)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'('  shift 16
	.  error

	ejecutables  goto 191
	bloque_ejecutables  goto 192
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_For  goto 32


state 156
	cuerpo_Then : then ejecutables .  (94)

	.  reduce 94


state 157
	sentencia_If : If condicion_if then cuerpo_If . end_if error  (84)
	sentencia_If : If condicion_if then cuerpo_If . error  (85)

	error  shift 193
	end_if  shift 194
	.  error


state 158
	cuerpo_Else : Else '{' . bloque_ejecutables '}'  (95)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'('  shift 16
	.  error
>>>>>>> release

	ejecutables  goto 191
	bloque_ejecutables  goto 195
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_For  goto 32


state 159
<<<<<<< HEAD
	termino : termino '*' factor .  (184)

	.  reduce 184


state 160
	termino : termino '/' factor .  (185)

	.  reduce 185


state 161
	salida : out cadena error ';' .  (118)

	.  reduce 118


state 162
	salida : out '(' cadena error . ';'  (117)

	';'  shift 191
	.  error


state 163
	salida : out '(' cadena ')' . ';'  (115)
	salida : out '(' cadena ')' . error  (116)

	error  shift 192
	';'  shift 193
	.  error


state 164
	salida : out '(' ')' error . ';'  (120)
=======
	cuerpo_Else : Else ejecutables .  (96)

	.  reduce 96


state 160
	sentencia_If : If condicion_if cuerpo_If end_if . ';'  (83)

	';'  shift 196
	.  error


state 161
	cuerpo_If : cuerpo_Then cuerpo_Else .  (90)

	.  reduce 90


state 162
	termino : termino '*' factor .  (183)

	.  reduce 183


state 163
	termino : termino '/' factor .  (184)

	.  reduce 184


state 164
	salida : out cadena error ';' .  (80)

	.  reduce 80


state 165
	salida : out '(' cadena error . ';'  (79)
=======
	invocacion_funcion : id '(' list_parametros ')' . ';'  (184)
>>>>>>> release

	';'  shift 197
	.  error


state 151
	list_parametros : factor ',' . factor  (186)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	factor  goto 198


state 152
	encabezado_For : id ':' For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)

	id  shift 199
	.  error


state 153
	encabezado_For : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)

	For  shift 87
	.  error


state 154
	for_else_cte : expresion_For error .  (78)

	.  reduce 78


state 155
	for_else_cte : expresion_For Else . cte  (77)

	cte  shift 200
	.  error


state 156
	asignacion : id op_asignacion expresion error .  (75)

	.  reduce 75


state 157
	asignacion : id op_asignacion expresion ';' .  (74)

	.  reduce 74


state 158
	asignacion : id op_asignacion for_else_cte ';' .  (76)

	.  reduce 76


state 159
	condicion_if : '(' expresion_relacional ')' .  (88)

	.  reduce 88


state 160
	expresion : expresion signo termino .  (189)
	termino : termino . '*' factor  (191)
	termino : termino . '/' factor  (192)

	'*'  shift 111
	'/'  shift 112
	error  reduce 189
	then  reduce 189
	Else  reduce 189
	menorigual  reduce 189
	mayorigual  reduce 189
	distinto  reduce 189
	';'  reduce 189
	')'  reduce 189
	'='  reduce 189
	'+'  reduce 189
	'-'  reduce 189
	'<'  reduce 189
	'>'  reduce 189


state 161
	expresion_relacional : expresion comparador expresion .  (188)
	expresion : expresion . signo termino  (189)

	'+'  shift 99
	'-'  shift 100
	then  reduce 188
	Else  reduce 188
	')'  reduce 188

	signo  goto 103


state 162
	cuerpo_Then : then . '{' bloque_ejecutables '}'  (95)
	cuerpo_Then : then . ejecutables  (96)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'{'  shift 163
	'('  shift 16
	.  error

	ejecutables  goto 164
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


<<<<<<< HEAD
state 170
	sentencia_when : when '(' condicion_for ')' . cuerpo_when ';'  (127)
>>>>>>> release
=======
state 163
	cuerpo_Then : then '{' . bloque_ejecutables '}'  (95)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'('  shift 16
	.  error

	ejecutables  goto 201
	bloque_ejecutables  goto 202
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


state 164
	cuerpo_Then : then ejecutables .  (96)

	.  reduce 96


state 165
	sentencia_If : If condicion_if then cuerpo_If . end_if error  (86)
	sentencia_If : If condicion_if then cuerpo_If . error  (87)

	error  shift 203
	end_if  shift 204
	.  error


<<<<<<< HEAD
<<<<<<< HEAD
state 165
	condicion_for : id comparador cte .  (155)

	.  reduce 155


state 166
	sentencia_when : when '(' condicion_for then . cuerpo_when ';' error  (143)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 195
	'('  shift 16
	.  error

	sentencia  goto 196
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_when  goto 197


state 167
	sentencia_when : when '(' condicion_for ')' . then cuerpo_when ';'  (141)
	sentencia_when : when '(' condicion_for ')' . cuerpo_when ';' error  (144)

	id  shift 4
	If  shift 5
	then  shift 198
	out  shift 6
	fun  shift 7
=======
state 172
	sentencia_when : when condicion_for ')' cuerpo_when . ';' error  (128)
=======
state 166
	cuerpo_Else : Else '{' . bloque_ejecutables '}'  (97)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'('  shift 16
	.  error

	ejecutables  goto 201
	bloque_ejecutables  goto 205
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


state 167
	cuerpo_Else : Else ejecutables .  (98)

	.  reduce 98


state 168
	sentencia_If : If condicion_if cuerpo_If end_if . ';'  (85)

	';'  shift 206
	.  error


state 169
	cuerpo_If : cuerpo_Then cuerpo_Else .  (92)

	.  reduce 92


state 170
	termino : termino '*' factor .  (191)

<<<<<<< HEAD
	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'{'  shift 195
	'('  shift 16
	.  error

	sentencia  goto 196
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_when  goto 199


state 168
	sentencia_when : when condicion_for ')' then . cuerpo_when ';' error  (142)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 195
	'('  shift 16
	.  error

	sentencia  goto 196
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_when  goto 200


state 169
	encabezado_For : For id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte . ';' condicion_for ';' signo id cola_For error  (152)

	';'  shift 201
	.  error


state 170
	encabezado_For : For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For  (150)
	encabezado_For : For '(' id op_asignacion . cte ':' condicion_for ':' signo id ')' cola_For error  (153)

	cte  shift 202
	.  error


state 171
	sentencia_CONTINUE : CONTINUE id ';' error .  (172)

	.  reduce 172


state 172
	sentencia_CONTINUE : CONTINUE ':' id ';' .  (171)

	.  reduce 171


state 173
=======
	'{'  shift 210
	'('  shift 16
	.  error
=======
	.  reduce 191
>>>>>>> release


state 171
	termino : termino '/' factor .  (192)

	.  reduce 192


<<<<<<< HEAD
	condicion_for  goto 221
	condicion_operacion_for  goto 222


state 177
	sentencia_CONTINUE : CONTINUE id ';' error .  (178)

	.  reduce 178


state 178
	sentencia_CONTINUE : CONTINUE ':' id ';' .  (177)

	.  reduce 177


state 179
>>>>>>> release
	decl_const : id cte error .  (14)

	.  reduce 14


<<<<<<< HEAD
state 174
=======
state 180
>>>>>>> release
	decl_const : id op_asignacion error .  (13)

	.  reduce 13


<<<<<<< HEAD
state 175
=======
state 181
>>>>>>> release
	decl_const : id op_asignacion cte .  (12)

	.  reduce 12


<<<<<<< HEAD
state 176
=======
state 182
>>>>>>> release
	lista_de_asignacion_const : lista_de_asignacion_const ',' decl_const .  (11)

	.  reduce 11


<<<<<<< HEAD
state 177
=======
state 183
>>>>>>> release
	bloque_sentencias : bloque_sentencias '{' sentencia '}' .  (3)

	.  reduce 3


<<<<<<< HEAD
state 178
=======
state 184
	lista_de_variables : lista_de_variables id error .  (38)

	.  reduce 38


state 185
>>>>>>> release
	lista_de_variables : lista_de_variables ',' id .  (37)

	.  reduce 37


<<<<<<< HEAD
state 179
=======
state 186
>>>>>>> release
	asig_fun : ':' tipo .  (43)

	.  reduce 43


<<<<<<< HEAD
state 180
	cola_func : ')' asig_fun '{' . cuerpo_fun '}'  (45)

	id  shift 203
	If  shift 204
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
=======
state 187
	cola_func : ')' asig_fun '{' . cuerpo_fun '}'  (45)

	id  shift 223
	If  shift 224
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
>>>>>>> release
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 207
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	encabezado_func  goto 31
	cuerpo_fun  goto 212
	ret_fun  goto 213
	bloque_sentencias_funcion  goto 214
	ejecutables_funcion  goto 215
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	etiquetaFor  goto 32


state 181
	declaracion_func : encabezado_func parametro ',' parametro . cola_func  (47)
	declaracion_func : encabezado_func parametro ',' parametro . ',' parametro cola_func  (48)

	','  shift 218
	')'  shift 81
	.  error

	cola_func  goto 219


state 182
	encabezado_For : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (154)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
	.  error

	op_asignacion  goto 220


state 183
	devolverValor : Else cte . ';'  (113)
=======
	declarativas  goto 226
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 227
	salida  goto 228
	sentencia_BREAK  goto 229
	sentencia_CONTINUE  goto 230
	encabezado_func  goto 31
	cuerpo_fun  goto 231
	ret_fun  goto 232
	bloque_sentencias_funcion  goto 233
	ejecutables_funcion  goto 234
	sentencia_if_funcion  goto 235
	sentencia_for_funcion  goto 236


state 188
	declaracion_func : encabezado_func parametro ',' parametro . cola_func  (47)
	declaracion_func : encabezado_func parametro ',' parametro . ',' parametro cola_func  (48)

	','  shift 237
	')'  shift 78
	.  error

	cola_func  goto 238


state 189
	encabezado_For : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (137)

	opasignacion  shift 33
	':'  shift 117
	'='  shift 35
	.  error

	op_asignacion  goto 239


state 190
	for_else_cte : expresion_For Else cte .  (75)

	.  reduce 75


state 191
	bloque_ejecutables : ejecutables .  (29)

	.  reduce 29


state 192
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_Then : then '{' bloque_ejecutables . '}'  (93)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'}'  shift 240
	'('  shift 16
	.  error

	ejecutables  goto 241
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_For  goto 32


state 193
	sentencia_If : If condicion_if then cuerpo_If error .  (85)
>>>>>>> release

	.  reduce 85


state 194
	sentencia_If : If condicion_if then cuerpo_If end_if . error  (84)

	error  shift 242
	.  error


<<<<<<< HEAD
state 184
	invocacion : cadena '(' list_param_invoc ')' .  (181)

	.  reduce 181


state 185
	list_param_invoc : list_param_invoc factor .  (180)

	.  reduce 180


state 186
	sentencia_If : If condicion_if then cuerpo_If error .  (124)

	.  reduce 124


state 187
	sentencia_If : If condicion_if then cuerpo_If Else . cuerpo_Else end_if ';'  (122)
	sentencia_If : If condicion_if then cuerpo_If Else . cuerpo_Else end_if error  (123)
	sentencia_If : If condicion_if then cuerpo_If Else . cuerpo_Else error ';'  (125)
=======
state 195
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_Else : Else '{' bloque_ejecutables . '}'  (95)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
<<<<<<< HEAD
	'{'  shift 222
	'('  shift 16
	.  error

	ejecutables  goto 223
=======
	'}'  shift 243
	'('  shift 16
	.  error

	ejecutables  goto 241
>>>>>>> release
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
<<<<<<< HEAD
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_Else  goto 224


state 188
	sentencia_If : If condicion_if then cuerpo_If end_if . ';'  (121)

	';'  shift 225
	.  error


state 189
	cuerpo_If : '{' bloque_ejecutables '}' .  (127)

	.  reduce 127


state 190
	bloque_ejecutables : bloque_ejecutables ejecutables .  (28)

	.  reduce 28


state 191
	salida : out '(' cadena error ';' .  (117)

	.  reduce 117


state 192
	salida : out '(' cadena ')' error .  (116)

	.  reduce 116


state 193
	salida : out '(' cadena ')' ';' .  (115)

	.  reduce 115


state 194
	salida : out '(' ')' error ';' .  (120)

	.  reduce 120


state 195
	cuerpo_when : '{' . sentencia '}'  (145)
	cuerpo_when : '{' . sentencia error  (146)
=======
	encabezado_For  goto 32


state 196
	sentencia_If : If condicion_if cuerpo_If end_if ';' .  (83)

	.  reduce 83


state 197
	salida : out '(' cadena error ';' .  (79)

	.  reduce 79


state 198
	salida : out '(' cadena ')' error .  (78)

	.  reduce 78


state 199
	salida : out '(' cadena ')' ';' .  (77)

	.  reduce 77


state 200
	salida : out '(' ')' error ';' .  (82)
=======
state 172
	salida : out cadena error ';' .  (82)
>>>>>>> release

	.  reduce 82


<<<<<<< HEAD
state 201
	cuerpo_when : then '{' . sentencia '}'  (130)
	cuerpo_when : then '{' . sentencia error  (131)
>>>>>>> release
=======
state 173
	salida : out '(' cadena error . ';'  (81)

	';'  shift 207
	.  error


state 174
	salida : out '(' cadena ')' . ';'  (79)
	salida : out '(' cadena ')' . error  (80)

	error  shift 208
	';'  shift 209
	.  error


state 175
	salida : out '(' ')' error . ';'  (84)

	';'  shift 210
	.  error


state 176
	condicion_for : id comparador cte .  (142)

	.  reduce 142


state 177
	cuerpo_when : then . '{' sentencia '}'  (132)
	cuerpo_when : then . '{' sentencia error  (133)
	cuerpo_when : then . sentencia '}' error  (134)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 211
	'('  shift 16
	.  error

<<<<<<< HEAD
<<<<<<< HEAD
	sentencia  goto 226
=======
	sentencia  goto 244
>>>>>>> release
=======
	sentencia  goto 212
>>>>>>> release
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
<<<<<<< HEAD
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 196
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)
	cuerpo_when : sentencia . '}' error  (147)
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


state 178
	sentencia_when : when '(' condicion_for ')' . cuerpo_when ';'  (129)

	then  shift 177
	.  error

	cuerpo_when  goto 213


state 179
	sentencia_when : when '(' condicion_for cuerpo_when . ';' error  (131)

	';'  shift 214
	.  error


state 180
	sentencia_when : when condicion_for ')' cuerpo_when . ';' error  (130)

	';'  shift 215
	.  error


state 181
	encabezado_For : For id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte . ';' condicion_for ';' signo id cola_For error  (137)

	';'  shift 216
	.  error


state 182
	encabezado_For : For '(' id op_asignacion . cte ':' condicion_for ':' signo id ')' cola_For error  (138)
	asignacion_for : id op_asignacion . cte  (164)

	cte  shift 217
	.  error


state 183
	encabezado_For : For '(' detalles_for ')' . cola_For  (135)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 220
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 221
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33
	cola_For  goto 231


state 184
	detalles_for : asignacion_for ';' . condicion_operacion_for  (140)

	id  shift 55
	.  error

	condicion_for  goto 232
	condicion_operacion_for  goto 233


state 185
	sentencia_CONTINUE : CONTINUE id ';' error .  (182)

	.  reduce 182


state 186
	sentencia_CONTINUE : CONTINUE ':' id ';' .  (181)

	.  reduce 181


state 187
	decl_const : id cte error .  (14)

	.  reduce 14


state 188
	decl_const : id op_asignacion error .  (13)

	.  reduce 13


state 189
	decl_const : id op_asignacion cte .  (12)

	.  reduce 12


state 190
	lista_de_asignacion_const : lista_de_asignacion_const ',' decl_const .  (11)

	.  reduce 11


state 191
	bloque_sentencias : bloque_sentencias '{' sentencia '}' .  (3)

	.  reduce 3


state 192
	lista_de_variables : lista_de_variables id error .  (39)

	.  reduce 39


state 193
	lista_de_variables : lista_de_variables ',' id .  (38)

	.  reduce 38


state 194
	asig_fun : ':' tipo .  (44)

	.  reduce 44


state 195
	cola_func : ')' asig_fun '{' . cuerpo_fun '}'  (46)

	id  shift 234
	If  shift 235
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 237
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	encabezado_func  goto 32
	cuerpo_fun  goto 243
	ret_fun  goto 244
	bloque_sentencias_funcion  goto 245
	ejecutables_funcion  goto 246
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 196
	declaracion_func : encabezado_func parametro ',' parametro . cola_func  (48)
	declaracion_func : encabezado_func parametro ',' parametro . ',' parametro cola_func  (49)

	','  shift 249
	')'  shift 80
	.  error

	cola_func  goto 250


state 197
	invocacion_funcion : id '(' list_parametros ')' ';' .  (184)

	.  reduce 184


state 198
	list_parametros : factor ',' factor .  (186)

	.  reduce 186


state 199
	encabezado_For : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For  (139)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 251


state 200
	for_else_cte : expresion_For Else cte .  (77)

	.  reduce 77


state 201
	bloque_ejecutables : ejecutables .  (29)

	.  reduce 29


state 202
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_Then : then '{' bloque_ejecutables . '}'  (95)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'}'  shift 252
	'('  shift 16
	.  error

	ejecutables  goto 253
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


state 203
	sentencia_If : If condicion_if then cuerpo_If error .  (87)

	.  reduce 87


state 204
	sentencia_If : If condicion_if then cuerpo_If end_if . error  (86)

	error  shift 254
	.  error


state 205
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_Else : Else '{' bloque_ejecutables . '}'  (97)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'}'  shift 255
	'('  shift 16
	.  error

	ejecutables  goto 253
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_For  goto 33


state 206
	sentencia_If : If condicion_if cuerpo_If end_if ';' .  (85)

	.  reduce 85


state 207
	salida : out '(' cadena error ';' .  (81)

	.  reduce 81


state 208
	salida : out '(' cadena ')' error .  (80)

	.  reduce 80


state 209
	salida : out '(' cadena ')' ';' .  (79)

	.  reduce 79


state 210
	salida : out '(' ')' error ';' .  (84)

	.  reduce 84


state 211
	cuerpo_when : then '{' . sentencia '}'  (132)
	cuerpo_when : then '{' . sentencia error  (133)
>>>>>>> release

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'}'  shift 227
=======
>>>>>>> release
	'('  shift 16
	.  error

	sentencia  goto 256
	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 73
	ejecutables  goto 74
=======
	declarativas  goto 20
	ejecutables  goto 21
>>>>>>> release
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
<<<<<<< HEAD
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 197
	sentencia_when : when '(' condicion_for then cuerpo_when . ';' error  (143)

	';'  shift 228
	.  error


state 198
	sentencia_when : when '(' condicion_for ')' then . cuerpo_when ';'  (141)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 195
	'('  shift 16
	.  error

	sentencia  goto 196
	declaracion_const  goto 19
	declarativas  goto 20
	ejecutables  goto 21
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
	etiquetaFor  goto 32
	encabezado_For  goto 33
	cuerpo_when  goto 229


state 199
	sentencia_when : when '(' condicion_for ')' cuerpo_when . ';' error  (144)

	';'  shift 230
	.  error


state 200
	sentencia_when : when condicion_for ')' then cuerpo_when . ';' error  (142)

	';'  shift 231
	.  error


state 201
	encabezado_For : For id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte ';' . condicion_for ';' signo id cola_For error  (152)

	id  shift 56
	.  error

	condicion_for  goto 232


state 202
	encabezado_For : For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For  (150)
	encabezado_For : For '(' id op_asignacion cte . ':' condicion_for ':' signo id ')' cola_For error  (153)

	';'  shift 233
	':'  shift 234
	.  error


state 203
	sentencia_for_funcion : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)
	asignacion : id . op_asignacion expresion ';'  (109)
	asignacion : id . op_asignacion expresion  (110)
	etiquetaFor : id . op_asignacion encabezado_For devolverValor  (112)

	opasignacion  shift 34
	':'  shift 235
	'='  shift 36
	.  error

	op_asignacion  goto 37


state 204
	sentencia_if_funcion : If . condicion_if then cuerpo_If_funcion end_if ';'  (69)
	sentencia_if_funcion : If . condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if ';'  (70)
	sentencia_if_funcion : If . condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if error  (71)
	sentencia_if_funcion : If . condicion_if then cuerpo_If_funcion error  (72)
	sentencia_if_funcion : If . condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion error ';'  (73)
	sentencia_if_funcion : If . condicion_if cuerpo_If_funcion error  (74)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 236
	expresion_relacional  goto 45
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 205
	ret_fun : Return . '(' expresion ')' ';'  (50)
	ret_fun : Return . expresion ')' ';'  (51)
	ret_fun : Return . '(' expresion ';'  (52)
	ret_fun : Return . expresion ';'  (53)
	ret_fun : Return . '(' expresion ')' error  (54)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'('  shift 237
	'-'  shift 42
	.  error

	expresion  goto 238
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 206
	sentencia_for_funcion : For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (91)
	sentencia_for_funcion : For . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For . id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error  (93)
	sentencia_for_funcion : For . '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (94)

	id  shift 239
	'('  shift 240
	.  error


state 207
	bloque_sentencias_funcion : declarativas .  (68)

	.  reduce 68


state 208
	ejecutables_funcion : asignacion .  (56)

	.  reduce 56


state 209
	ejecutables_funcion : salida .  (58)

	.  reduce 58


state 210
	ejecutables_funcion : sentencia_BREAK . error  (61)

	error  shift 241
	.  error


state 211
	ejecutables_funcion : sentencia_CONTINUE . error  (62)

	error  shift 242
	.  error


state 212
	cola_func : ')' asig_fun '{' cuerpo_fun . '}'  (45)

	'}'  shift 243
	.  error


state 213
	ejecutables_funcion : ret_fun .  (60)

	.  reduce 60


state 214
	cuerpo_fun : bloque_sentencias_funcion .  (55)
	bloque_sentencias_funcion : bloque_sentencias_funcion . ejecutables_funcion  (65)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declarativas  (66)

	id  shift 203
	If  shift 204
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	'}'  reduce 55

	declaracion_const  goto 19
	declarativas  goto 244
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	encabezado_func  goto 31
	ret_fun  goto 213
	ejecutables_funcion  goto 245
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	etiquetaFor  goto 32


state 215
	bloque_sentencias_funcion : ejecutables_funcion .  (67)

	.  reduce 67


state 216
	ejecutables_funcion : sentencia_if_funcion .  (57)

	.  reduce 57


state 217
	ejecutables_funcion : sentencia_for_funcion .  (59)

	.  reduce 59


state 218
	declaracion_func : encabezado_func parametro ',' parametro ',' . parametro cola_func  (48)

	id  shift 80
	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 82
	parametro  goto 246


state 219
	declaracion_func : encabezado_func parametro ',' parametro cola_func .  (47)

	.  reduce 47


state 220
	encabezado_For : id ':' For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For  (154)

	cte  shift 247
	.  error


state 221
	devolverValor : Else cte ';' .  (113)

	.  reduce 113


state 222
	cuerpo_Else : '{' . bloque_ejecutables '}'  (129)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'('  shift 16
	.  error

	ejecutables  goto 156
	bloque_ejecutables  goto 248
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 223
	cuerpo_Else : ejecutables .  (130)

	.  reduce 130


state 224
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else . end_if ';'  (122)
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else . end_if error  (123)
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else . error ';'  (125)

	error  shift 249
	end_if  shift 250
	.  error


state 225
	sentencia_If : If condicion_if then cuerpo_If end_if ';' .  (121)

	.  reduce 121


state 226
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)
	cuerpo_when : '{' sentencia . '}'  (145)
	cuerpo_when : '{' sentencia . error  (146)

	error  shift 251
=======
	encabezado_For  goto 32


state 202
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)
	cuerpo_when : then sentencia . '}' error  (132)

>>>>>>> release
	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 252
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 73
	ejecutables  goto 74
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	encabezado_func  goto 31
<<<<<<< HEAD
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 227
	cuerpo_when : sentencia '}' . error  (147)
=======
	encabezado_For  goto 32
=======
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33
>>>>>>> release


state 212
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)
	cuerpo_when : then sentencia . '}' error  (134)

	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 257
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 72
	ejecutables  goto 73
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


state 213
	sentencia_when : when '(' condicion_for ')' cuerpo_when . ';'  (129)

	';'  shift 258
	.  error


state 214
	sentencia_when : when '(' condicion_for cuerpo_when ';' . error  (131)

	error  shift 259
	.  error


state 215
	sentencia_when : when condicion_for ')' cuerpo_when ';' . error  (130)

	error  shift 260
	.  error


state 216
	encabezado_For : For id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte ';' . condicion_for ';' signo id cola_For error  (137)

	id  shift 55
	.  error

	condicion_for  goto 261


state 217
	encabezado_For : For '(' id op_asignacion cte . ':' condicion_for ':' signo id ')' cola_For error  (138)
	asignacion_for : id op_asignacion cte .  (164)

	':'  shift 262
	';'  reduce 164


state 218
	sentencia_if_for : If . condicion_if cuerpo_If_for end_if ';'  (99)
	sentencia_if_for : If . condicion_if cuerpo_If_for end_if error  (100)
	sentencia_if_for : If . condicion_if cuerpo_If_for error  (101)

	id  shift 39
	cte  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 263
	expresion_relacional  goto 45
	factor  goto 46
	termino  goto 47


state 219
	ret_fun : Return . '(' expresion ')' ';'  (51)
	ret_fun : Return . expresion ')' ';' error  (52)
	ret_fun : Return . '(' expresion ';' error  (53)
	ret_fun : Return . expresion ';' error  (54)
	ret_fun : Return . '(' expresion ')' error  (55)

	id  shift 39
	cte  shift 40
	'('  shift 264
	'-'  shift 42
	.  error

	expresion  goto 265
	factor  goto 46
	termino  goto 47


state 220
	cola_For : '{' . bloque_sentencias_For '}' ';'  (143)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 266
	sentencias_For  goto 267
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 221
	cola_For : sentencias_For .  (144)

	.  reduce 144


state 222
	sentencias_For : declarativas . error  (154)

	error  shift 268
	.  error


state 223
	sentencias_For : asignacion .  (147)

	.  reduce 147


state 224
	sentencias_For : salida .  (148)

	.  reduce 148


state 225
	sentencias_For : expresion_For .  (149)

	.  reduce 149


state 226
	sentencias_For : invocacion_funcion .  (151)

	.  reduce 151


state 227
	sentencias_For : sentencia_BREAK .  (152)

	.  reduce 152


state 228
	sentencias_For : sentencia_CONTINUE .  (153)

	.  reduce 153


state 229
	sentencias_For : ret_fun . error  (155)

	error  shift 269
	.  error


state 230
	sentencias_For : sentencia_if_for .  (150)

	.  reduce 150


state 231
	encabezado_For : For '(' detalles_for ')' cola_For .  (135)

	.  reduce 135


state 232
	condicion_operacion_for : condicion_for . ';' operacion_for  (141)

	';'  shift 270
	.  error


state 233
	detalles_for : asignacion_for ';' condicion_operacion_for .  (140)

	.  reduce 140


state 234
	asignacion : id . op_asignacion expresion ';'  (74)
	asignacion : id . op_asignacion expresion error  (75)
	asignacion : id . op_asignacion for_else_cte ';'  (76)
	sentencia_for_funcion : id . ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)
	invocacion_funcion : id . '(' list_parametros ')' ';'  (184)
	invocacion_funcion : id . '(' ')' ';'  (185)

	opasignacion  shift 34
	'('  shift 35
	':'  shift 271
	'='  shift 37
	.  error

	op_asignacion  goto 38


state 235
	sentencia_if_funcion : If . condicion_if cuerpo_If_funcion end_if ';'  (109)
	sentencia_if_funcion : If . condicion_if cuerpo_If_funcion end_if error  (110)
	sentencia_if_funcion : If . condicion_if cuerpo_If_funcion error  (111)

	id  shift 39
	cte  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 272
	expresion_relacional  goto 45
	factor  goto 46
	termino  goto 47


state 236
	sentencia_for_funcion : For . '(' detalles_for ')' cola_For_funcion  (159)
	sentencia_for_funcion : For . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For . id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error  (161)
	sentencia_for_funcion : For . '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (162)

	id  shift 273
	'('  shift 274
	.  error


state 237
	bloque_sentencias_funcion : declarativas .  (70)

	.  reduce 70


state 238
	ejecutables_funcion : asignacion .  (57)

	.  reduce 57


state 239
	ejecutables_funcion : salida .  (59)

	.  reduce 59


state 240
	ejecutables_funcion : invocacion_funcion .  (60)

	.  reduce 60


state 241
	ejecutables_funcion : sentencia_BREAK . error  (63)

	error  shift 275
	.  error


state 242
	ejecutables_funcion : sentencia_CONTINUE . error  (64)

	error  shift 276
	.  error


state 243
	cola_func : ')' asig_fun '{' cuerpo_fun . '}'  (46)

	'}'  shift 277
	.  error


state 244
	ejecutables_funcion : ret_fun .  (62)

	.  reduce 62


state 245
	cuerpo_fun : bloque_sentencias_funcion .  (56)
	bloque_sentencias_funcion : bloque_sentencias_funcion . ejecutables_funcion  (67)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declarativas  (68)

	id  shift 234
	If  shift 235
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	'}'  reduce 56

	declaracion_const  goto 19
	declarativas  goto 278
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	encabezado_func  goto 32
	ret_fun  goto 244
	ejecutables_funcion  goto 279
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 246
	bloque_sentencias_funcion : ejecutables_funcion .  (69)

	.  reduce 69


state 247
	ejecutables_funcion : sentencia_if_funcion .  (58)

	.  reduce 58


state 248
	ejecutables_funcion : sentencia_for_funcion .  (61)

	.  reduce 61


state 249
	declaracion_func : encabezado_func parametro ',' parametro ',' . parametro cola_func  (49)

	id  shift 79
	i32  shift 9
	f32  shift 13
	.  error

	tipo  goto 81
	parametro  goto 280


state 250
<<<<<<< HEAD
	encabezado_For : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For error  (136)
>>>>>>> release

	error  shift 253
	.  error

<<<<<<< HEAD

state 228
	sentencia_when : when '(' condicion_for then cuerpo_when ';' . error  (143)

	error  shift 254
	.  error


state 229
	sentencia_when : when '(' condicion_for ')' then cuerpo_when . ';'  (141)

	';'  shift 255
	.  error


state 230
	sentencia_when : when '(' condicion_for ')' cuerpo_when ';' . error  (144)

	error  shift 256
	.  error


state 231
	sentencia_when : when condicion_for ')' then cuerpo_when ';' . error  (142)

	error  shift 257
	.  error


state 232
	encabezado_For : For id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte ';' condicion_for . ';' signo id cola_For error  (152)

	';'  shift 258
	.  error


state 233
	encabezado_For : For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For  (150)

	id  shift 56
	.  error

	condicion_for  goto 259


state 234
	encabezado_For : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For error  (153)

	id  shift 56
	.  error

	condicion_for  goto 260


state 235
	sentencia_for_funcion : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)
	op_asignacion : ':' . '='  (107)

	For  shift 261
	'='  shift 86
	.  error


state 236
	sentencia_if_funcion : If condicion_if . then cuerpo_If_funcion end_if ';'  (69)
	sentencia_if_funcion : If condicion_if . then cuerpo_If_funcion Else cuerpo_Else_funcion end_if ';'  (70)
	sentencia_if_funcion : If condicion_if . then cuerpo_If_funcion Else cuerpo_Else_funcion end_if error  (71)
	sentencia_if_funcion : If condicion_if . then cuerpo_If_funcion error  (72)
	sentencia_if_funcion : If condicion_if . then cuerpo_If_funcion Else cuerpo_Else_funcion error ';'  (73)
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion error  (74)

	id  shift 203
	If  shift 204
	then  shift 262
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'{'  shift 263
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 264
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	cuerpo_If_funcion  goto 265
	etiquetaFor  goto 32


state 237
=======
	condicion_for  goto 274
=======
	declaracion_func : encabezado_func parametro ',' parametro cola_func .  (48)

	.  reduce 48
>>>>>>> release


state 251
	encabezado_For : id ':' For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For  (139)

	cte  shift 281
	.  error


state 252
<<<<<<< HEAD
>>>>>>> release
	ret_fun : Return '(' . expresion ')' ';'  (50)
	ret_fun : Return '(' . expresion ';' error  (52)
	ret_fun : Return '(' . expresion ')' error  (54)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'-'  shift 42
	.  error

<<<<<<< HEAD
	expresion  goto 266
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 238
	ret_fun : Return expresion . ')' ';'  (51)
	ret_fun : Return expresion . ';'  (53)
	expresion : expresion . signo termino  (182)

	';'  shift 267
	')'  shift 268
	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 101


state 239
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error  (93)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
	.  error

	op_asignacion  goto 269


state 240
	sentencia_for_funcion : For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (91)
	sentencia_for_funcion : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (94)

	id  shift 270
	.  error


state 241
	ejecutables_funcion : sentencia_BREAK error .  (61)

	.  reduce 61


state 242
	ejecutables_funcion : sentencia_CONTINUE error .  (62)

	.  reduce 62


state 243
	cola_func : ')' asig_fun '{' cuerpo_fun '}' .  (45)

	.  reduce 45


state 244
	bloque_sentencias_funcion : bloque_sentencias_funcion declarativas .  (66)

	.  reduce 66


state 245
	bloque_sentencias_funcion : bloque_sentencias_funcion ejecutables_funcion .  (65)

	.  reduce 65


state 246
	declaracion_func : encabezado_func parametro ',' parametro ',' parametro . cola_func  (48)

	')'  shift 81
	.  error

	cola_func  goto 271


state 247
	encabezado_For : id ':' For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For  (154)

	';'  shift 272
	.  error


state 248
	bloque_ejecutables : bloque_ejecutables . ejecutables  (28)
	cuerpo_Else : '{' bloque_ejecutables . '}'  (129)

	id  shift 4
	If  shift 5
	out  shift 6
	BREAK  shift 8
	For  shift 11
	CONTINUE  shift 12
	'}'  shift 273
	'('  shift 16
	.  error

	ejecutables  goto 190
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	sentencia_BREAK  goto 29
	sentencia_CONTINUE  goto 30
	etiquetaFor  goto 32
	encabezado_For  goto 33


state 249
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else error . ';'  (125)

	';'  shift 274
	.  error


state 250
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else end_if . ';'  (122)
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else end_if . error  (123)

	error  shift 275
	';'  shift 276
	.  error


state 251
	cuerpo_when : '{' sentencia error .  (146)

	.  reduce 146


state 252
	cuerpo_when : '{' sentencia '}' .  (145)

	.  reduce 145


state 253
	cuerpo_when : sentencia '}' error .  (147)

	.  reduce 147


state 254
	sentencia_when : when '(' condicion_for then cuerpo_when ';' error .  (143)

	.  reduce 143


state 255
	sentencia_when : when '(' condicion_for ')' then cuerpo_when ';' .  (141)

	.  reduce 141


state 256
	sentencia_when : when '(' condicion_for ')' cuerpo_when ';' error .  (144)

	.  reduce 144


state 257
	sentencia_when : when condicion_for ')' then cuerpo_when ';' error .  (142)

	.  reduce 142


state 258
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' . signo id cola_For error  (152)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 277


state 259
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For  (150)

	';'  shift 278
	.  error


state 260
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for . ':' signo id ')' cola_For error  (153)

	':'  shift 279
=======
	expresion  goto 280
	termino  goto 44
	factor  goto 45
=======
	cuerpo_Then : then '{' bloque_ejecutables '}' .  (95)

	.  reduce 95
>>>>>>> release


state 253
	bloque_ejecutables : bloque_ejecutables ejecutables .  (28)

<<<<<<< HEAD
	';'  shift 281
	')'  shift 282
	'+'  shift 94
	'-'  shift 95
>>>>>>> release
	.  error

	signo  goto 98
=======
	.  reduce 28
>>>>>>> release


<<<<<<< HEAD
state 261
	sentencia_for_funcion : id ':' For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)

	'('  shift 280
=======
state 254
	sentencia_If : If condicion_if then cuerpo_If end_if error .  (86)

	.  reduce 86


state 255
	cuerpo_Else : Else '{' bloque_ejecutables '}' .  (97)

	.  reduce 97


state 256
	sentencia : sentencia . declarativas  (20)
	sentencia : sentencia . ejecutables  (21)
	cuerpo_when : then '{' sentencia . '}'  (132)
	cuerpo_when : then '{' sentencia . error  (133)

	error  shift 282
	id  shift 4
	If  shift 5
	out  shift 6
	fun  shift 7
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 283
	'('  shift 16
>>>>>>> release
	.  error

	declaracion_const  goto 19
	declarativas  goto 72
	ejecutables  goto 73
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 25
	salida  goto 26
	sentencia_If  goto 27
	expresion_For  goto 28
	invocacion_funcion  goto 29
	sentencia_BREAK  goto 30
	sentencia_CONTINUE  goto 31
	encabezado_func  goto 32
	encabezado_For  goto 33


<<<<<<< HEAD
<<<<<<< HEAD
state 262
	sentencia_if_funcion : If condicion_if then . cuerpo_If_funcion end_if ';'  (69)
	sentencia_if_funcion : If condicion_if then . cuerpo_If_funcion Else cuerpo_Else_funcion end_if ';'  (70)
	sentencia_if_funcion : If condicion_if then . cuerpo_If_funcion Else cuerpo_Else_funcion end_if error  (71)
	sentencia_if_funcion : If condicion_if then . cuerpo_If_funcion error  (72)
	sentencia_if_funcion : If condicion_if then . cuerpo_If_funcion Else cuerpo_Else_funcion error ';'  (73)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'{'  shift 263
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 264
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	cuerpo_If_funcion  goto 281
	etiquetaFor  goto 32


state 263
	cuerpo_If_funcion : '{' . bloque_sentencias_ejecutables_funcion '}'  (75)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 282
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	bloque_sentencias_ejecutables_funcion  goto 283
	etiquetaFor  goto 32


state 264
	cuerpo_If_funcion : ejecutables_funcion .  (76)

	.  reduce 76


state 265
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion . error  (74)
=======
state 257
	cuerpo_when : then sentencia '}' . error  (134)
>>>>>>> release

	error  shift 284
	.  error


<<<<<<< HEAD
state 266
	ret_fun : Return '(' expresion . ')' ';'  (50)
	ret_fun : Return '(' expresion . ';'  (52)
	ret_fun : Return '(' expresion . ')' error  (54)
	expresion : expresion . signo termino  (182)

	';'  shift 285
	')'  shift 286
	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 101


state 267
	ret_fun : Return expresion ';' .  (53)

	.  reduce 53


state 268
	ret_fun : Return expresion ')' . ';'  (51)

	';'  shift 287
	.  error


state 269
	sentencia_for_funcion : For id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion . cte ';' condicion_for ';' signo id cola_For_funcion error  (93)

	cte  shift 288
	.  error


state 270
	sentencia_for_funcion : For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (91)
	sentencia_for_funcion : For '(' id . op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (94)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
	.  error

	op_asignacion  goto 289


state 271
	declaracion_func : encabezado_func parametro ',' parametro ',' parametro cola_func .  (48)

	.  reduce 48


state 272
	encabezado_For : id ':' For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For  (154)

	id  shift 56
	.  error

	condicion_for  goto 290


state 273
	cuerpo_Else : '{' bloque_ejecutables '}' .  (129)
=======
state 258
	sentencia_when : when '(' condicion_for ')' cuerpo_when ';' .  (129)
>>>>>>> release

	.  reduce 129


<<<<<<< HEAD
state 274
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else error ';' .  (125)

	.  reduce 125


state 275
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else end_if error .  (123)

	.  reduce 123


state 276
	sentencia_If : If condicion_if then cuerpo_If Else cuerpo_Else end_if ';' .  (122)

	.  reduce 122


state 277
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id cola_For error  (152)

	id  shift 291
	.  error


state 278
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For  (150)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 292


state 279
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' . signo id ')' cola_For error  (153)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 293


state 280
	sentencia_for_funcion : id ':' For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)

	id  shift 294
	.  error


state 281
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion . end_if ';'  (69)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion . Else cuerpo_Else_funcion end_if ';'  (70)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion . Else cuerpo_Else_funcion end_if error  (71)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion . error  (72)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion . Else cuerpo_Else_funcion error ';'  (73)

	error  shift 295
	Else  shift 296
	end_if  shift 297
	.  error


state 282
	bloque_sentencias_ejecutables_funcion : ejecutables_funcion .  (64)

	.  reduce 64


state 283
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (63)
	cuerpo_If_funcion : '{' bloque_sentencias_ejecutables_funcion . '}'  (75)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'}'  shift 298
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 299
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	etiquetaFor  goto 32


state 284
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion error .  (74)

	.  reduce 74


state 285
	ret_fun : Return '(' expresion ';' .  (52)

	.  reduce 52


state 286
	ret_fun : Return '(' expresion ')' . ';'  (50)
	ret_fun : Return '(' expresion ')' . error  (54)

	error  shift 300
	';'  shift 301
	.  error


state 287
	ret_fun : Return expresion ')' ';' .  (51)

	.  reduce 51


state 288
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id cola_For_funcion error  (93)

	';'  shift 302
	.  error


state 289
	sentencia_for_funcion : For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion  (91)
	sentencia_for_funcion : For '(' id op_asignacion . cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (94)

	cte  shift 303
	.  error


state 290
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For  (154)

	';'  shift 304
	.  error


state 291
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For error  (151)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . cola_For error  (152)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 306
	'('  shift 16
	')'  shift 307
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 308
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cola_For  goto 317


state 292
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For  (150)

	id  shift 318
	.  error


state 293
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo . id ')' cola_For error  (153)

	id  shift 319
	.  error


state 294
	sentencia_for_funcion : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)

	opasignacion  shift 34
	':'  shift 119
	'='  shift 36
	.  error

	op_asignacion  goto 320


state 295
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion error .  (72)

	.  reduce 72


state 296
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else . cuerpo_Else_funcion end_if ';'  (70)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else . cuerpo_Else_funcion end_if error  (71)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else . cuerpo_Else_funcion error ';'  (73)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'{'  shift 321
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 322
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	cuerpo_Else_funcion  goto 323
	etiquetaFor  goto 32


state 297
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion end_if . ';'  (69)

	';'  shift 324
	.  error


state 298
	cuerpo_If_funcion : '{' bloque_sentencias_ejecutables_funcion '}' .  (75)

	.  reduce 75


state 299
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion ejecutables_funcion .  (63)

	.  reduce 63


state 300
	ret_fun : Return '(' expresion ')' error .  (54)

	.  reduce 54


state 301
	ret_fun : Return '(' expresion ')' ';' .  (50)

	.  reduce 50


state 302
	sentencia_for_funcion : For id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte ';' . condicion_for ';' signo id cola_For_funcion error  (93)

	id  shift 56
	.  error

	condicion_for  goto 325


state 303
	sentencia_for_funcion : For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion  (91)
	sentencia_for_funcion : For '(' id op_asignacion cte . ':' condicion_for ':' signo id ')' cola_For_funcion error  (94)

	';'  shift 326
	':'  shift 327
	.  error


state 304
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For  (154)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 328


state 305
	sentencia_if_for : If . condicion_if then cuerpo_If_for end_if ';'  (131)
	sentencia_if_for : If . condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if ';'  (132)
	sentencia_if_for : If . condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if error  (133)
	sentencia_if_for : If . condicion_if then cuerpo_If_for error  (134)
	sentencia_if_for : If . condicion_if then cuerpo_If_for Else cuerpo_Else_for error ';'  (135)
	sentencia_if_for : If . condicion_if cuerpo_If_for error  (136)

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 329
	expresion_relacional  goto 45
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 306
	cola_For : '{' . bloque_sentencias_For '}' ';'  (148)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 330
	sentencias_For  goto 331
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 307
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For error  (151)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 306
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 308
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cola_For  goto 332


state 308
	cola_For : sentencias_For .  (149)

	.  reduce 149


state 309
	sentencias_For : declarativas . error  (164)

	error  shift 333
	.  error


state 310
	sentencias_For : asignacion .  (158)

	.  reduce 158


state 311
	sentencias_For : salida .  (159)

	.  reduce 159


state 312
	sentencias_For : expresion_For .  (160)

	.  reduce 160


state 313
	sentencias_For : sentencia_BREAK .  (162)

	.  reduce 162


state 314
	sentencias_For : sentencia_CONTINUE .  (163)

	.  reduce 163


state 315
	sentencias_For : ret_fun . error  (165)

	error  shift 334
	.  error


state 316
	sentencias_For : sentencia_if_for .  (161)

	.  reduce 161


state 317
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id cola_For . error  (152)

	error  shift 335
	.  error


state 318
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For  (150)

	')'  shift 336
	.  error


state 319
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id . ')' cola_For error  (153)

	')'  shift 337
	.  error


state 320
	sentencia_for_funcion : id ':' For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion  (95)

	cte  shift 338
	.  error


state 321
	cuerpo_Else_funcion : '{' . bloque_sentencias_ejecutables_funcion '}'  (77)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 282
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	bloque_sentencias_ejecutables_funcion  goto 339
	etiquetaFor  goto 32


state 322
	cuerpo_Else_funcion : ejecutables_funcion .  (78)

	.  reduce 78


state 323
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion . end_if ';'  (70)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion . end_if error  (71)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion . error ';'  (73)

	error  shift 340
	end_if  shift 341
	.  error


state 324
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion end_if ';' .  (69)

	.  reduce 69


state 325
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id cola_For_funcion error  (93)

	';'  shift 342
	.  error


state 326
	sentencia_for_funcion : For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For_funcion  (91)

	id  shift 56
	.  error

	condicion_for  goto 343


state 327
	sentencia_for_funcion : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For_funcion error  (94)

	id  shift 56
	.  error

	condicion_for  goto 344


state 328
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For  (154)

	id  shift 345
	.  error


state 329
	sentencia_if_for : If condicion_if . then cuerpo_If_for end_if ';'  (131)
	sentencia_if_for : If condicion_if . then cuerpo_If_for Else cuerpo_Else_for end_if ';'  (132)
	sentencia_if_for : If condicion_if . then cuerpo_If_for Else cuerpo_Else_for end_if error  (133)
	sentencia_if_for : If condicion_if . then cuerpo_If_for error  (134)
	sentencia_if_for : If condicion_if . then cuerpo_If_for Else cuerpo_Else_for error ';'  (135)
	sentencia_if_for : If condicion_if . cuerpo_If_for error  (136)

	id  shift 4
	If  shift 305
	then  shift 346
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 347
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 348
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cuerpo_If_for  goto 349


state 330
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cola_For : '{' bloque_sentencias_For . '}' ';'  (148)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
=======
state 259
	sentencia_when : when '(' condicion_for cuerpo_when ';' error .  (131)

	.  reduce 131


state 260
	sentencia_when : when condicion_for ')' cuerpo_when ';' error .  (130)

	.  reduce 130


state 261
	encabezado_For : For id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte ';' condicion_for . ';' signo id cola_For error  (137)

	';'  shift 285
	.  error


state 262
	encabezado_For : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For error  (138)

	id  shift 55
	.  error

	condicion_for  goto 286


state 263
	sentencia_if_for : If condicion_if . cuerpo_If_for end_if ';'  (99)
	sentencia_if_for : If condicion_if . cuerpo_If_for end_if error  (100)
	sentencia_if_for : If condicion_if . cuerpo_If_for error  (101)

	then  shift 287
	Else  shift 288
	.  error

	cuerpo_If_for  goto 289
	cuerpo_then_for  goto 290
	cuerpo_Else_for  goto 291


state 264
	ret_fun : Return '(' . expresion ')' ';'  (51)
	ret_fun : Return '(' . expresion ';' error  (53)
	ret_fun : Return '(' . expresion ')' error  (55)

	id  shift 39
	cte  shift 40
	'-'  shift 42
	.  error

	expresion  goto 292
	factor  goto 46
	termino  goto 47


state 265
	ret_fun : Return expresion . ')' ';' error  (52)
	ret_fun : Return expresion . ';' error  (54)
	expresion : expresion . signo termino  (189)

	';'  shift 293
	')'  shift 294
	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 103


state 266
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cola_For : '{' bloque_sentencias_For . '}' ';'  (143)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'}'  shift 350
=======
	'}'  shift 295
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	sentencias_For  goto 351
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 331
=======
state 255
>>>>>>> release
=======
	sentencias_For  goto 296
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 267
>>>>>>> release
	bloque_sentencias_For : sentencias_For .  (16)

	.  reduce 16


<<<<<<< HEAD
<<<<<<< HEAD
state 332
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For . error  (151)

	error  shift 352
	.  error


state 333
	sentencias_For : declarativas error .  (164)

	.  reduce 164


state 334
	sentencias_For : ret_fun error .  (165)

	.  reduce 165


state 335
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id cola_For error .  (152)

	.  reduce 152


state 336
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For  (150)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 306
	'('  shift 16
=======
state 256
	sentencias_For : declarativas error .  (151)

	.  reduce 151


state 257
	sentencias_For : ret_fun error .  (152)

	.  reduce 152


state 258
	condicion_operacion_for : condicion_for ';' . operacion_for  (139)

	'+'  shift 94
	'-'  shift 95
	.  error

	signo  goto 285
	operacion_for  goto 286


state 259
	op_asignacion : ':' . '='  (70)
	sentencia_for_funcion : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (160)

	For  shift 287
	'='  shift 83
	.  error


state 260
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion end_if ';'  (107)
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion end_if error  (108)
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion error  (109)

	then  shift 288
	Else  shift 289
	.  error

	cuerpo_If_funcion  goto 290
	cuerpo_then_funcion  goto 291
	cuerpo_Else_funcion  goto 292


state 261
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (157)
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error  (158)

	opasignacion  shift 33
	':'  shift 117
	'='  shift 35
	.  error

	op_asignacion  goto 293


state 262
	sentencia_for_funcion : For '(' . detalles_for ')' cola_For_funcion  (156)
	sentencia_for_funcion : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (159)

	id  shift 294
	.  error

	detalles_for  goto 295
	asignacion_for  goto 121


state 263
	ejecutables_funcion : sentencia_BREAK error .  (61)

	.  reduce 61


state 264
	ejecutables_funcion : sentencia_CONTINUE error .  (62)

	.  reduce 62


state 265
	cola_func : ')' asig_fun '{' cuerpo_fun '}' .  (45)

	.  reduce 45


state 266
	bloque_sentencias_funcion : bloque_sentencias_funcion declarativas .  (66)

	.  reduce 66


state 267
	bloque_sentencias_funcion : bloque_sentencias_funcion ejecutables_funcion .  (65)

	.  reduce 65


=======
>>>>>>> release
state 268
	sentencias_For : declarativas error .  (154)

	.  reduce 154


state 269
	sentencias_For : ret_fun error .  (155)

	.  reduce 155


state 270
	condicion_operacion_for : condicion_for ';' . operacion_for  (141)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 297
	operacion_for  goto 298


state 271
	op_asignacion : ':' . '='  (72)
	sentencia_for_funcion : id ':' . For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

	For  shift 299
	'='  shift 88
	.  error


state 272
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion end_if ';'  (109)
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion end_if error  (110)
	sentencia_if_funcion : If condicion_if . cuerpo_If_funcion error  (111)

	then  shift 300
	Else  shift 301
	.  error

	cuerpo_If_funcion  goto 302
	cuerpo_then_funcion  goto 303
	cuerpo_Else_funcion  goto 304


state 273
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id . op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error  (161)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 305


state 274
	sentencia_for_funcion : For '(' . detalles_for ')' cola_For_funcion  (159)
	sentencia_for_funcion : For '(' . id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (162)

	id  shift 306
	.  error

	detalles_for  goto 307
	asignacion_for  goto 126


state 275
	ejecutables_funcion : sentencia_BREAK error .  (63)

	.  reduce 63


state 276
	ejecutables_funcion : sentencia_CONTINUE error .  (64)

	.  reduce 64


state 277
	cola_func : ')' asig_fun '{' cuerpo_fun '}' .  (46)

	.  reduce 46


state 278
	bloque_sentencias_funcion : bloque_sentencias_funcion declarativas .  (68)

	.  reduce 68


state 279
	bloque_sentencias_funcion : bloque_sentencias_funcion ejecutables_funcion .  (67)

	.  reduce 67


state 280
	declaracion_func : encabezado_func parametro ',' parametro ',' parametro . cola_func  (49)

	')'  shift 80
	.  error

	cola_func  goto 308


state 281
	encabezado_For : id ':' For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For  (139)

	';'  shift 309
	.  error


state 282
	cuerpo_when : then '{' sentencia error .  (133)

<<<<<<< HEAD
	';'  shift 311
>>>>>>> release
	.  error
=======
	.  reduce 133
>>>>>>> release

	declaracion_const  goto 19
	sentencias_For  goto 308
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cola_For  goto 353


<<<<<<< HEAD
state 337
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' . cola_For error  (153)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 306
	'('  shift 16
=======
state 283
	cuerpo_when : then '{' sentencia '}' .  (132)

<<<<<<< HEAD
	';'  shift 312
>>>>>>> release
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 308
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cola_For  goto 354


<<<<<<< HEAD
state 338
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion  (95)

	';'  shift 355
	.  error
=======
	.  reduce 132
>>>>>>> release


state 339
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (63)
	cuerpo_Else_funcion : '{' bloque_sentencias_ejecutables_funcion . '}'  (77)

	id  shift 203
	If  shift 204
	out  shift 6
	Return  shift 205
	BREAK  shift 8
	For  shift 206
	CONTINUE  shift 12
	'}'  shift 356
	'('  shift 16
	.  error

	asignacion  goto 208
	salida  goto 209
	sentencia_BREAK  goto 210
	sentencia_CONTINUE  goto 211
	ret_fun  goto 213
	ejecutables_funcion  goto 299
	sentencia_if_funcion  goto 216
	sentencia_for_funcion  goto 217
	etiquetaFor  goto 32


state 340
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion error . ';'  (73)

	';'  shift 357
	.  error


state 341
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if . ';'  (70)
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if . error  (71)

	error  shift 358
	';'  shift 359
	.  error


state 342
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' . signo id cola_For_funcion error  (93)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 360


state 343
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion  (91)

	';'  shift 361
	.  error


state 344
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for . ':' signo id ')' cola_For_funcion error  (94)

	':'  shift 362
	.  error


state 345
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For  (154)

	')'  shift 363
	.  error


state 346
	sentencia_if_for : If condicion_if then . cuerpo_If_for end_if ';'  (131)
	sentencia_if_for : If condicion_if then . cuerpo_If_for Else cuerpo_Else_for end_if ';'  (132)
	sentencia_if_for : If condicion_if then . cuerpo_If_for Else cuerpo_Else_for end_if error  (133)
	sentencia_if_for : If condicion_if then . cuerpo_If_for error  (134)
	sentencia_if_for : If condicion_if then . cuerpo_If_for Else cuerpo_Else_for error ';'  (135)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 347
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 348
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cuerpo_If_for  goto 364


state 347
	cuerpo_If_for : '{' . bloque_sentencias_For '}'  (137)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 365
	sentencias_For  goto 331
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 348
	cuerpo_If_for : sentencias_For .  (138)

	.  reduce 138


state 349
	sentencia_if_for : If condicion_if cuerpo_If_for . error  (136)

	error  shift 366
	.  error


state 350
	cola_For : '{' bloque_sentencias_For '}' . ';'  (148)

	';'  shift 367
	.  error


state 351
=======
state 284
<<<<<<< HEAD
>>>>>>> release
	bloque_sentencias_For : bloque_sentencias_For sentencias_For .  (17)
=======
	cuerpo_when : then sentencia '}' error .  (134)
>>>>>>> release

	.  reduce 134


<<<<<<< HEAD
state 352
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error .  (151)

	.  reduce 151


state 353
	encabezado_For : For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For .  (150)

	.  reduce 150


state 354
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For . error  (153)

	error  shift 368
	.  error


state 355
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For_funcion  (95)
=======
state 285
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' . signo id cola_For error  (137)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 310


state 286
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for . ':' signo id ')' cola_For error  (138)

	':'  shift 311
	.  error


state 287
	cuerpo_then_for : then . '{' bloque_sentencias_For '}'  (105)
	cuerpo_then_for : then . sentencias_For  (106)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 312
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 313
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 288
	cuerpo_Else_for : Else . '{' bloque_sentencias_For '}'  (107)
	cuerpo_Else_for : Else . sentencias_For  (108)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 314
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 315
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 289
	sentencia_if_for : If condicion_if cuerpo_If_for . end_if ';'  (99)
	sentencia_if_for : If condicion_if cuerpo_If_for . end_if error  (100)
	sentencia_if_for : If condicion_if cuerpo_If_for . error  (101)

	error  shift 316
	end_if  shift 317
	.  error


state 290
	cuerpo_If_for : cuerpo_then_for . cuerpo_Else_for  (102)
	cuerpo_If_for : cuerpo_then_for .  (103)

	Else  shift 288
	error  reduce 103
	end_if  reduce 103

	cuerpo_Else_for  goto 318


state 291
	cuerpo_If_for : cuerpo_Else_for . error  (104)

	error  shift 319
	.  error


state 292
	ret_fun : Return '(' expresion . ')' ';'  (51)
	ret_fun : Return '(' expresion . ';' error  (53)
	ret_fun : Return '(' expresion . ')' error  (55)
	expresion : expresion . signo termino  (189)

	';'  shift 320
	')'  shift 321
	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 103


state 293
	ret_fun : Return expresion ';' . error  (54)

	error  shift 322
	.  error


state 294
	ret_fun : Return expresion ')' . ';' error  (52)

	';'  shift 323
	.  error


state 295
	cola_For : '{' bloque_sentencias_For '}' . ';'  (143)

	';'  shift 324
	.  error


state 296
	bloque_sentencias_For : bloque_sentencias_For sentencias_For .  (17)

	.  reduce 17


state 297
<<<<<<< HEAD
	encabezado_For : id ':' For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For  (137)
>>>>>>> release

	id  shift 56
	.  error

<<<<<<< HEAD
	condicion_for  goto 369


state 356
	cuerpo_Else_funcion : '{' bloque_sentencias_ejecutables_funcion '}' .  (77)

	.  reduce 77


state 357
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion error ';' .  (73)

	.  reduce 73


state 358
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if error .  (71)

	.  reduce 71


state 359
	sentencia_if_funcion : If condicion_if then cuerpo_If_funcion Else cuerpo_Else_funcion end_if ';' .  (70)

	.  reduce 70


state 360
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo . id cola_For_funcion error  (93)

	id  shift 370
	.  error


state 361
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For_funcion  (91)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 371


state 362
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' . signo id ')' cola_For_funcion error  (94)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 372


state 363
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For  (154)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
=======
	condicion_for  goto 326


state 298
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For error  (134)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id cola_For error  (135)

	id  shift 327
	.  error


state 299
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' . signo id ')' cola_For error  (136)

	'+'  shift 94
	'-'  shift 95
	.  error

	signo  goto 328


state 300
	cuerpo_then_for : then '{' . bloque_sentencias_For '}'  (103)

	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'{'  shift 306
=======
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	sentencias_For  goto 308
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cola_For  goto 373


state 364
	sentencia_if_for : If condicion_if then cuerpo_If_for . end_if ';'  (131)
	sentencia_if_for : If condicion_if then cuerpo_If_for . Else cuerpo_Else_for end_if ';'  (132)
	sentencia_if_for : If condicion_if then cuerpo_If_for . Else cuerpo_Else_for end_if error  (133)
	sentencia_if_for : If condicion_if then cuerpo_If_for . error  (134)
	sentencia_if_for : If condicion_if then cuerpo_If_for . Else cuerpo_Else_for error ';'  (135)

	error  shift 374
	Else  shift 375
	end_if  shift 376
	.  error


state 365
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_If_for : '{' bloque_sentencias_For . '}'  (137)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
=======
	bloque_sentencias_For  goto 329
	sentencias_For  goto 255
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32


state 301
	cuerpo_then_for : then sentencias_For .  (104)

	.  reduce 104


state 302
	cuerpo_Else_for : Else '{' . bloque_sentencias_For '}'  (105)

	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 330
	sentencias_For  goto 255
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32


state 303
	cuerpo_Else_for : Else sentencias_For .  (106)

	.  reduce 106


state 304
	sentencia_if_for : If condicion_if cuerpo_If_for error .  (99)

	.  reduce 99


state 305
	sentencia_if_for : If condicion_if cuerpo_If_for end_if . ';'  (97)
	sentencia_if_for : If condicion_if cuerpo_If_for end_if . error  (98)

	error  shift 331
	';'  shift 332
	.  error


state 306
	cuerpo_If_for : cuerpo_then_for cuerpo_Else_for .  (100)

	.  reduce 100


state 307
	cuerpo_If_for : cuerpo_Else_for error .  (102)

	.  reduce 102


state 308
	ret_fun : Return '(' expresion ';' . error  (52)

	error  shift 333
	.  error


state 309
	ret_fun : Return '(' expresion ')' . ';'  (50)
	ret_fun : Return '(' expresion ')' . error  (54)

	error  shift 334
	';'  shift 335
	.  error


state 310
	ret_fun : Return expresion ';' error .  (53)

	.  reduce 53


state 311
	ret_fun : Return expresion ')' ';' . error  (51)

	error  shift 336
	.  error


state 312
	cola_For : '{' bloque_sentencias_For '}' ';' .  (141)
=======
	operacion_for : signo . id  (165)

	id  shift 325
	.  error


state 298
	condicion_operacion_for : condicion_for ';' operacion_for .  (141)
>>>>>>> release

	.  reduce 141


state 299
	sentencia_for_funcion : id ':' For . '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

	'('  shift 326
	.  error


state 300
	cuerpo_then_funcion : then . '{' bloque_sentencias_ejecutables_funcion '}'  (115)
	cuerpo_then_funcion : then . ejecutables_funcion  (116)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'{'  shift 327
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 328
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 301
	cuerpo_Else_funcion : Else . '{' bloque_sentencias_ejecutables_funcion '}'  (117)
	cuerpo_Else_funcion : Else . ejecutables_funcion  (118)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'{'  shift 329
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 330
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 302
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion . end_if ';'  (109)
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion . end_if error  (110)
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion . error  (111)

	error  shift 331
	end_if  shift 332
	.  error


state 303
	cuerpo_If_funcion : cuerpo_then_funcion . cuerpo_Else_funcion  (112)
	cuerpo_If_funcion : cuerpo_then_funcion .  (113)

	Else  shift 301
	error  reduce 113
	end_if  reduce 113

	cuerpo_Else_funcion  goto 333


state 304
	cuerpo_If_funcion : cuerpo_Else_funcion . error  (114)

	error  shift 334
	.  error


state 305
	sentencia_for_funcion : For id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion . cte ';' condicion_for ';' signo id cola_For_funcion error  (161)

	cte  shift 335
	.  error


state 306
	sentencia_for_funcion : For '(' id . op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (162)
	asignacion_for : id . op_asignacion cte  (164)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 336


state 307
	sentencia_for_funcion : For '(' detalles_for . ')' cola_For_funcion  (159)

	')'  shift 337
	.  error


state 308
	declaracion_func : encabezado_func parametro ',' parametro ',' parametro cola_func .  (49)

	.  reduce 49


state 309
	encabezado_For : id ':' For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For  (139)

	id  shift 55
	.  error

	condicion_for  goto 338


state 310
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo . id cola_For error  (137)

	id  shift 339
	.  error


state 311
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' . signo id ')' cola_For error  (138)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 340


state 312
	cuerpo_then_for : then '{' . bloque_sentencias_For '}'  (105)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 341
	sentencias_For  goto 267
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 313
	cuerpo_then_for : then sentencias_For .  (106)

	.  reduce 106


state 314
	cuerpo_Else_for : Else '{' . bloque_sentencias_For '}'  (107)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	bloque_sentencias_For  goto 342
	sentencias_For  goto 267
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 315
<<<<<<< HEAD
	cuerpo_then_funcion : then '{' . bloque_sentencias_ejecutables_funcion '}'  (113)

	id  shift 223
	If  shift 224
	out  shift 6
	Return  shift 209
	BREAK  shift 8
	For  shift 225
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 227
	salida  goto 228
	sentencia_BREAK  goto 229
	sentencia_CONTINUE  goto 230
	ret_fun  goto 232
	ejecutables_funcion  goto 338
	sentencia_if_funcion  goto 235
	sentencia_for_funcion  goto 236
	bloque_sentencias_ejecutables_funcion  goto 339


state 316
	cuerpo_then_funcion : then ejecutables_funcion .  (114)

	.  reduce 114


state 317
	cuerpo_Else_funcion : Else '{' . bloque_sentencias_ejecutables_funcion '}'  (115)

	id  shift 223
	If  shift 224
	out  shift 6
	Return  shift 209
	BREAK  shift 8
	For  shift 225
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 227
	salida  goto 228
	sentencia_BREAK  goto 229
	sentencia_CONTINUE  goto 230
	ret_fun  goto 232
	ejecutables_funcion  goto 338
	sentencia_if_funcion  goto 235
	sentencia_for_funcion  goto 236
	bloque_sentencias_ejecutables_funcion  goto 340


state 318
	cuerpo_Else_funcion : Else ejecutables_funcion .  (116)

	.  reduce 116


state 319
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion error .  (109)

	.  reduce 109


state 320
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if . ';'  (107)
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if . error  (108)

	error  shift 341
	';'  shift 342
	.  error


state 321
	cuerpo_If_funcion : cuerpo_then_funcion cuerpo_Else_funcion .  (110)

	.  reduce 110


state 322
	cuerpo_If_funcion : cuerpo_Else_funcion error .  (112)

	.  reduce 112


state 323
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion error  (157)
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id cola_For_funcion error  (158)

	';'  shift 343
	.  error


state 324
	sentencia_for_funcion : For '(' id op_asignacion . cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (159)
	asignacion_for : id op_asignacion . cte  (161)

	cte  shift 344
	.  error


state 325
	sentencia_for_funcion : For '(' detalles_for ')' . cola_For_funcion  (156)

	id  shift 223
	If  shift 345
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 346
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 347
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 348
	salida  goto 349
	sentencia_BREAK  goto 350
	sentencia_CONTINUE  goto 351
	encabezado_func  goto 31
	ret_fun  goto 352
	sentencia_for_funcion  goto 353
	sentencia_if_for_funcion  goto 354
	sentencias_For_funcion  goto 355
	cola_For_funcion  goto 356


state 326
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For  (137)

	';'  shift 357
	.  error


state 327
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For error  (134)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . cola_For error  (135)

	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 210
	'('  shift 16
	')'  shift 358
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 211
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32
	cola_For  goto 359


state 328
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo . id ')' cola_For error  (136)

	id  shift 360
	.  error


state 329
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_then_for : then '{' bloque_sentencias_For . '}'  (103)

	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 361
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 284
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32


state 330
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_Else_for : Else '{' bloque_sentencias_For . '}'  (105)

	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'}'  shift 377
=======
	'}'  shift 362
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	sentencias_For  goto 351
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 366
	sentencia_if_for : If condicion_if cuerpo_If_for error .  (136)

	.  reduce 136


state 367
	cola_For : '{' bloque_sentencias_For '}' ';' .  (148)

	.  reduce 148


state 368
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error .  (153)

	.  reduce 153


state 369
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion  (95)

	';'  shift 378
	.  error


state 370
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion error  (92)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id . cola_For_funcion error  (93)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 380
	'('  shift 16
	')'  shift 381
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 390
	cola_For_funcion  goto 391
	etiquetaFor  goto 32


state 371
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion  (91)

	id  shift 392
	.  error


state 372
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo . id ')' cola_For_funcion error  (94)

	id  shift 393
	.  error


state 373
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For .  (154)

	.  reduce 154


state 374
	sentencia_if_for : If condicion_if then cuerpo_If_for error .  (134)

	.  reduce 134


state 375
	sentencia_if_for : If condicion_if then cuerpo_If_for Else . cuerpo_Else_for end_if ';'  (132)
	sentencia_if_for : If condicion_if then cuerpo_If_for Else . cuerpo_Else_for end_if error  (133)
	sentencia_if_for : If condicion_if then cuerpo_If_for Else . cuerpo_Else_for error ';'  (135)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 394
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 395
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316
	cuerpo_Else_for  goto 396


state 376
	sentencia_if_for : If condicion_if then cuerpo_If_for end_if . ';'  (131)

	';'  shift 397
	.  error


state 377
	cuerpo_If_for : '{' bloque_sentencias_For '}' .  (137)

	.  reduce 137


state 378
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For_funcion  (95)

	'+'  shift 97
	'-'  shift 98
	.  error

	signo  goto 398


state 379
	sentencia_if_for_funcion : If . condicion_if then cuerpo_If_for_funcion end_if ';'  (79)
	sentencia_if_for_funcion : If . condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if ';'  (80)
	sentencia_if_for_funcion : If . condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if error  (81)
	sentencia_if_for_funcion : If . condicion_if then cuerpo_If_for_funcion error  (82)
	sentencia_if_for_funcion : If . condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion error ';'  (83)
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion error  (84)
=======
	sentencias_For  goto 284
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32


state 331
	sentencia_if_for : If condicion_if cuerpo_If_for end_if error .  (98)

	.  reduce 98


state 332
	sentencia_if_for : If condicion_if cuerpo_If_for end_if ';' .  (97)

	.  reduce 97


state 333
	ret_fun : Return '(' expresion ';' error .  (52)

	.  reduce 52


state 334
	ret_fun : Return '(' expresion ')' error .  (54)

	.  reduce 54


state 335
	ret_fun : Return '(' expresion ')' ';' .  (50)

	.  reduce 50


state 336
	ret_fun : Return expresion ')' ';' error .  (51)

	.  reduce 51


state 337
	sentencia_for_funcion : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (160)

	opasignacion  shift 33
	':'  shift 117
	'='  shift 35
	.  error

	op_asignacion  goto 363


state 338
	bloque_sentencias_ejecutables_funcion : ejecutables_funcion .  (64)

	.  reduce 64


state 339
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (63)
	cuerpo_then_funcion : then '{' bloque_sentencias_ejecutables_funcion . '}'  (113)

	id  shift 223
	If  shift 224
	out  shift 6
	Return  shift 209
	BREAK  shift 8
	For  shift 225
	CONTINUE  shift 12
	'}'  shift 364
	'('  shift 16
	.  error

	asignacion  goto 227
	salida  goto 228
	sentencia_BREAK  goto 229
	sentencia_CONTINUE  goto 230
	ret_fun  goto 232
	ejecutables_funcion  goto 365
	sentencia_if_funcion  goto 235
	sentencia_for_funcion  goto 236


state 340
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (63)
	cuerpo_Else_funcion : Else '{' bloque_sentencias_ejecutables_funcion . '}'  (115)

	id  shift 223
	If  shift 224
	out  shift 6
	Return  shift 209
	BREAK  shift 8
	For  shift 225
	CONTINUE  shift 12
	'}'  shift 366
	'('  shift 16
	.  error

	asignacion  goto 227
	salida  goto 228
	sentencia_BREAK  goto 229
	sentencia_CONTINUE  goto 230
	ret_fun  goto 232
	ejecutables_funcion  goto 365
	sentencia_if_funcion  goto 235
	sentencia_for_funcion  goto 236


state 341
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if error .  (108)
=======
	cuerpo_Else_for : Else sentencias_For .  (108)
>>>>>>> release

	.  reduce 108


state 316
	sentencia_if_for : If condicion_if cuerpo_If_for error .  (101)

	.  reduce 101


state 317
	sentencia_if_for : If condicion_if cuerpo_If_for end_if . ';'  (99)
	sentencia_if_for : If condicion_if cuerpo_If_for end_if . error  (100)

<<<<<<< HEAD
	id  shift 53
	.  error

	condicion_for  goto 367


state 344
	sentencia_for_funcion : For '(' id op_asignacion cte . ':' condicion_for ':' signo id ')' cola_For_funcion error  (159)
	asignacion_for : id op_asignacion cte .  (161)

	':'  shift 368
	';'  reduce 161


state 345
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion end_if ';'  (117)
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion end_if error  (118)
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion error  (119)
>>>>>>> release

	id  shift 38
	cte  shift 39
	cadena  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

<<<<<<< HEAD
	expresion  goto 43
	condicion_if  goto 399
	expresion_relacional  goto 45
	factor  goto 46
	invocacion  goto 47
	termino  goto 48


state 380
	cola_For_funcion : '{' . bloque_sentencias_For_funcion '}' ';'  (89)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
=======
	expresion  goto 41
	condicion_if  goto 369
	expresion_relacional  goto 43
	termino  goto 44
	factor  goto 45


state 346
	cola_For_funcion : '{' . bloque_sentencias_For_funcion '}' ';'  (154)

	id  shift 223
	If  shift 345
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
>>>>>>> release
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	bloque_sentencias_For_funcion  goto 400
	sentencias_For_funcion  goto 401
	etiquetaFor  goto 32


state 381
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion error  (92)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 380
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 390
	cola_For_funcion  goto 402
	etiquetaFor  goto 32


state 382
	sentencias_For_funcion : declarativas . error  (103)

	error  shift 403
	.  error


state 383
	sentencias_For_funcion : asignacion .  (96)
=======
	declarativas  goto 347
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 348
	salida  goto 349
	sentencia_BREAK  goto 350
	sentencia_CONTINUE  goto 351
	encabezado_func  goto 31
	ret_fun  goto 352
	sentencia_for_funcion  goto 353
	sentencia_if_for_funcion  goto 354
	bloque_sentencias_For_funcion  goto 370
	sentencias_For_funcion  goto 371


state 347
	sentencias_For_funcion : declarativas . error  (170)

	error  shift 372
	.  error


state 348
	sentencias_For_funcion : asignacion .  (163)
>>>>>>> release
=======
	error  shift 343
	';'  shift 344
	.  error


state 318
	cuerpo_If_for : cuerpo_then_for cuerpo_Else_for .  (102)
>>>>>>> release

	.  reduce 102


<<<<<<< HEAD
<<<<<<< HEAD
state 384
	sentencias_For_funcion : salida .  (97)
=======
state 349
	sentencias_For_funcion : salida .  (164)
>>>>>>> release
=======
state 319
	cuerpo_If_for : cuerpo_Else_for error .  (104)
>>>>>>> release

	.  reduce 104


<<<<<<< HEAD
<<<<<<< HEAD
state 385
	sentencias_For_funcion : sentencia_BREAK .  (100)
=======
state 350
	sentencias_For_funcion : sentencia_BREAK .  (167)
>>>>>>> release
=======
state 320
	ret_fun : Return '(' expresion ';' . error  (53)
>>>>>>> release

	error  shift 345
	.  error


<<<<<<< HEAD
<<<<<<< HEAD
state 386
	sentencias_For_funcion : sentencia_CONTINUE .  (101)
=======
state 351
	sentencias_For_funcion : sentencia_CONTINUE .  (168)
>>>>>>> release
=======
state 321
	ret_fun : Return '(' expresion ')' . ';'  (51)
	ret_fun : Return '(' expresion ')' . error  (55)
>>>>>>> release

	error  shift 346
	';'  shift 347
	.  error


<<<<<<< HEAD
<<<<<<< HEAD
state 387
	sentencias_For_funcion : ret_fun .  (99)
=======
state 352
	sentencias_For_funcion : ret_fun .  (166)
>>>>>>> release
=======
state 322
	ret_fun : Return expresion ';' error .  (54)
>>>>>>> release

	.  reduce 54


<<<<<<< HEAD
<<<<<<< HEAD
state 388
	sentencias_For_funcion : sentencia_for_funcion .  (98)
=======
state 353
	sentencias_For_funcion : sentencia_for_funcion .  (165)
>>>>>>> release
=======
state 323
	ret_fun : Return expresion ')' ';' . error  (52)

	error  shift 348
	.  error


state 324
	cola_For : '{' bloque_sentencias_For '}' ';' .  (143)

	.  reduce 143


state 325
	operacion_for : signo id .  (165)
>>>>>>> release

	.  reduce 165


<<<<<<< HEAD
<<<<<<< HEAD
state 389
	sentencias_For_funcion : sentencia_if_for_funcion .  (102)
=======
state 354
	sentencias_For_funcion : sentencia_if_for_funcion .  (169)
>>>>>>> release

	.  reduce 169


<<<<<<< HEAD
state 390
	cola_For_funcion : sentencias_For_funcion .  (90)
=======
state 355
	cola_For_funcion : sentencias_For_funcion .  (155)
>>>>>>> release

	.  reduce 155


<<<<<<< HEAD
state 391
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion . error  (93)

	error  shift 404
	.  error


state 392
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion  (91)

	')'  shift 405
	.  error


state 393
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id . ')' cola_For_funcion error  (94)

	')'  shift 406
	.  error


state 394
	cuerpo_Else_for : '{' . bloque_sentencias_For '}'  (139)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
=======
state 356
	sentencia_for_funcion : For '(' detalles_for ')' cola_For_funcion .  (156)

	.  reduce 156


state 357
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For  (137)

	'+'  shift 94
	'-'  shift 95
=======
state 326
	sentencia_for_funcion : id ':' For '(' . id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

	id  shift 349
>>>>>>> release
	.  error


state 327
	cuerpo_then_funcion : then '{' . bloque_sentencias_ejecutables_funcion '}'  (115)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 350
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248
	bloque_sentencias_ejecutables_funcion  goto 351


state 328
	cuerpo_then_funcion : then ejecutables_funcion .  (116)

	.  reduce 116


state 329
	cuerpo_Else_funcion : Else '{' . bloque_sentencias_ejecutables_funcion '}'  (117)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 350
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248
	bloque_sentencias_ejecutables_funcion  goto 352


state 330
	cuerpo_Else_funcion : Else ejecutables_funcion .  (118)

	.  reduce 118


state 331
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion error .  (111)

	.  reduce 111


state 332
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if . ';'  (109)
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if . error  (110)

	error  shift 353
	';'  shift 354
	.  error


state 333
	cuerpo_If_funcion : cuerpo_then_funcion cuerpo_Else_funcion .  (112)

	.  reduce 112


state 334
	cuerpo_If_funcion : cuerpo_Else_funcion error .  (114)

	.  reduce 114


state 335
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte . ';' condicion_for ';' signo id cola_For_funcion error  (161)

	';'  shift 355
	.  error


state 336
	sentencia_for_funcion : For '(' id op_asignacion . cte ':' condicion_for ':' signo id ')' cola_For_funcion error  (162)
	asignacion_for : id op_asignacion . cte  (164)

	cte  shift 356
	.  error


state 337
	sentencia_for_funcion : For '(' detalles_for ')' . cola_For_funcion  (159)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
<<<<<<< HEAD
	Return  shift 209
>>>>>>> release
=======
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 358
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 368
	cola_For_funcion  goto 369


state 338
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For  (139)

	';'  shift 370
	.  error


state 339
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For error  (136)
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id . cola_For error  (137)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 220
	'('  shift 16
	')'  shift 371
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 221
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33
	cola_For  goto 372


state 340
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo . id ')' cola_For error  (138)

	id  shift 373
	.  error


state 341
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_then_for : then '{' bloque_sentencias_For . '}'  (105)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 374
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
<<<<<<< HEAD
	bloque_sentencias_For  goto 407
	sentencias_For  goto 331
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 395
	cuerpo_Else_for : sentencias_For .  (140)

	.  reduce 140


state 396
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for . end_if ';'  (132)
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for . end_if error  (133)
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for . error ';'  (135)

	error  shift 408
	end_if  shift 409
	.  error


state 397
	sentencia_if_for : If condicion_if then cuerpo_If_for end_if ';' .  (131)

	.  reduce 131


state 398
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion  (95)

	id  shift 410
	.  error


state 399
	sentencia_if_for_funcion : If condicion_if . then cuerpo_If_for_funcion end_if ';'  (79)
	sentencia_if_for_funcion : If condicion_if . then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if ';'  (80)
	sentencia_if_for_funcion : If condicion_if . then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if error  (81)
	sentencia_if_for_funcion : If condicion_if . then cuerpo_If_for_funcion error  (82)
	sentencia_if_for_funcion : If condicion_if . then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion error ';'  (83)
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion error  (84)

	id  shift 203
	If  shift 379
	then  shift 411
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 412
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	cuerpo_If_for_funcion  goto 413
	sentencias_For_funcion  goto 414
	etiquetaFor  goto 32


state 400
	cola_For_funcion : '{' bloque_sentencias_For_funcion . '}' ';'  (89)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (105)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 415
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 416
	etiquetaFor  goto 32


state 401
	bloque_sentencias_For_funcion : sentencias_For_funcion .  (104)

	.  reduce 104


state 402
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion . error  (92)

	error  shift 417
	.  error


state 403
	sentencias_For_funcion : declarativas error .  (103)
=======
	sentencias_For  goto 211
	declarativas  goto 212
=======
	sentencias_For  goto 296
	declarativas  goto 222
>>>>>>> release
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 342
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_Else_for : Else '{' bloque_sentencias_For . '}'  (107)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 375
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 296
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33


state 343
	sentencia_if_for : If condicion_if cuerpo_If_for end_if error .  (100)

	.  reduce 100


state 344
	sentencia_if_for : If condicion_if cuerpo_If_for end_if ';' .  (99)

	.  reduce 99


state 345
	ret_fun : Return '(' expresion ';' error .  (53)

	.  reduce 53


state 346
	ret_fun : Return '(' expresion ')' error .  (55)

	.  reduce 55


state 347
	ret_fun : Return '(' expresion ')' ';' .  (51)

	.  reduce 51


state 348
	ret_fun : Return expresion ')' ';' error .  (52)

	.  reduce 52


state 349
	sentencia_for_funcion : id ':' For '(' id . op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

	opasignacion  shift 34
	':'  shift 122
	'='  shift 37
	.  error

	op_asignacion  goto 376


state 350
	bloque_sentencias_ejecutables_funcion : ejecutables_funcion .  (66)

	.  reduce 66


state 351
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (65)
	cuerpo_then_funcion : then '{' bloque_sentencias_ejecutables_funcion . '}'  (115)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'}'  shift 377
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 378
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 352
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion . ejecutables_funcion  (65)
	cuerpo_Else_funcion : Else '{' bloque_sentencias_ejecutables_funcion . '}'  (117)

	id  shift 234
	If  shift 235
	out  shift 6
	Return  shift 219
	BREAK  shift 8
	For  shift 236
	CONTINUE  shift 12
	'}'  shift 379
	'('  shift 16
	.  error

	asignacion  goto 238
	salida  goto 239
	invocacion_funcion  goto 240
	sentencia_BREAK  goto 241
	sentencia_CONTINUE  goto 242
	ret_fun  goto 244
	ejecutables_funcion  goto 378
	sentencia_if_funcion  goto 247
	sentencia_for_funcion  goto 248


state 353
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if error .  (110)

	.  reduce 110


state 354
	sentencia_if_funcion : If condicion_if cuerpo_If_funcion end_if ';' .  (109)

	.  reduce 109


state 355
	sentencia_for_funcion : For id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte ';' . condicion_for ';' signo id cola_For_funcion error  (161)

	id  shift 55
	.  error

	condicion_for  goto 380


state 356
	sentencia_for_funcion : For '(' id op_asignacion cte . ':' condicion_for ':' signo id ')' cola_For_funcion error  (162)
	asignacion_for : id op_asignacion cte .  (164)

	':'  shift 381
	';'  reduce 164


state 357
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion end_if ';'  (119)
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion end_if error  (120)
	sentencia_if_for_funcion : If . condicion_if cuerpo_If_for_funcion error  (121)

	id  shift 39
	cte  shift 40
	'('  shift 41
	'-'  shift 42
	.  error

	expresion  goto 43
	condicion_if  goto 382
	expresion_relacional  goto 45
	factor  goto 46
	termino  goto 47


state 358
	cola_For_funcion : '{' . bloque_sentencias_For_funcion '}' ';'  (157)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	bloque_sentencias_For_funcion  goto 383
	sentencias_For_funcion  goto 384


state 359
	sentencias_For_funcion : declarativas . error  (174)

	error  shift 385
	.  error


state 360
	sentencias_For_funcion : asignacion .  (166)

	.  reduce 166


state 361
<<<<<<< HEAD
	cuerpo_then_for : then '{' bloque_sentencias_For '}' .  (103)
>>>>>>> release
=======
	sentencias_For_funcion : salida .  (167)
>>>>>>> release

	.  reduce 167


<<<<<<< HEAD
state 404
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error .  (93)
=======
state 362
<<<<<<< HEAD
	cuerpo_Else_for : Else '{' bloque_sentencias_For '}' .  (105)
>>>>>>> release

	.  reduce 105


<<<<<<< HEAD
state 405
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion  (91)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 380
=======
state 363
	sentencia_for_funcion : id ':' For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion  (160)

	cte  shift 377
	.  error


state 364
	cuerpo_then_funcion : then '{' bloque_sentencias_ejecutables_funcion '}' .  (113)

	.  reduce 113


state 365
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion ejecutables_funcion .  (63)

	.  reduce 63


state 366
	cuerpo_Else_funcion : Else '{' bloque_sentencias_ejecutables_funcion '}' .  (115)

	.  reduce 115


state 367
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion error  (157)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id cola_For_funcion error  (158)

	';'  shift 378
	.  error


state 368
	sentencia_for_funcion : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For_funcion error  (159)

	id  shift 53
	.  error

	condicion_for  goto 379


state 369
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion end_if ';'  (117)
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion end_if error  (118)
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion error  (119)

	then  shift 380
	Else  shift 381
	.  error

	cuerpo_If_for_funcion  goto 382
	then_if_for_funcion  goto 383
	else_if_for_funcion  goto 384


state 370
	cola_For_funcion : '{' bloque_sentencias_For_funcion . '}' ';'  (154)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (172)

	id  shift 223
	If  shift 345
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 385
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 390
	cola_For_funcion  goto 418
	etiquetaFor  goto 32


state 406
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' . cola_For_funcion error  (94)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 380
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 390
	cola_For_funcion  goto 419
	etiquetaFor  goto 32


state 407
	bloque_sentencias_For : bloque_sentencias_For . sentencias_For  (17)
	cuerpo_Else_for : '{' bloque_sentencias_For . '}'  (139)

	id  shift 4
	If  shift 305
	out  shift 6
	fun  shift 7
	Return  shift 205
=======
	declarativas  goto 347
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 348
	salida  goto 349
	sentencia_BREAK  goto 350
	sentencia_CONTINUE  goto 351
	encabezado_func  goto 31
	ret_fun  goto 352
	sentencia_for_funcion  goto 353
	sentencia_if_for_funcion  goto 354
	sentencias_For_funcion  goto 386


state 371
	bloque_sentencias_For_funcion : sentencias_For_funcion .  (171)

	.  reduce 171


state 372
	sentencias_For_funcion : declarativas error .  (170)
=======
	sentencias_For_funcion : invocacion_funcion .  (170)
>>>>>>> release

	.  reduce 170


state 363
	sentencias_For_funcion : sentencia_BREAK .  (171)

	.  reduce 171


state 364
	sentencias_For_funcion : sentencia_CONTINUE .  (172)

	.  reduce 172


state 365
	sentencias_For_funcion : ret_fun .  (169)

	.  reduce 169


state 366
	sentencias_For_funcion : sentencia_for_funcion .  (168)

	.  reduce 168


state 367
	sentencias_For_funcion : sentencia_if_for_funcion .  (173)

	.  reduce 173


state 368
	cola_For_funcion : sentencias_For_funcion .  (158)

	.  reduce 158


state 369
	sentencia_for_funcion : For '(' detalles_for ')' cola_For_funcion .  (159)

	.  reduce 159


state 370
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For  (139)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 386


state 371
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For error  (136)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 220
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 221
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33
	cola_For  goto 387


state 372
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id cola_For . error  (137)

	error  shift 388
	.  error


state 373
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id . ')' cola_For error  (138)

	')'  shift 389
	.  error


state 374
	cuerpo_then_for : then '{' bloque_sentencias_For '}' .  (105)

	.  reduce 105


state 375
	cuerpo_Else_for : Else '{' bloque_sentencias_For '}' .  (107)

	.  reduce 107


state 376
	sentencia_for_funcion : id ':' For '(' id op_asignacion . cte ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

<<<<<<< HEAD
	id  shift 4
	If  shift 208
	out  shift 6
	fun  shift 7
	Return  shift 209
>>>>>>> release
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'}'  shift 420
=======
	'{'  shift 210
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	sentencias_For  goto 351
	declarativas  goto 309
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 310
	salida  goto 311
	expresion_For  goto 312
	sentencia_BREAK  goto 313
	sentencia_CONTINUE  goto 314
	encabezado_func  goto 31
	ret_fun  goto 315
	etiquetaFor  goto 32
	encabezado_For  goto 33
	sentencia_if_for  goto 316


state 408
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for error . ';'  (135)

	';'  shift 421
	.  error


state 409
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if . ';'  (132)
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if . error  (133)

	error  shift 422
	';'  shift 423
	.  error


state 410
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion  (95)

	')'  shift 424
	.  error


state 411
	sentencia_if_for_funcion : If condicion_if then . cuerpo_If_for_funcion end_if ';'  (79)
	sentencia_if_for_funcion : If condicion_if then . cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if ';'  (80)
	sentencia_if_for_funcion : If condicion_if then . cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if error  (81)
	sentencia_if_for_funcion : If condicion_if then . cuerpo_If_for_funcion error  (82)
	sentencia_if_for_funcion : If condicion_if then . cuerpo_If_for_funcion Else cuerpo_Else_for_funcion error ';'  (83)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 412
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	cuerpo_If_for_funcion  goto 425
	sentencias_For_funcion  goto 414
	etiquetaFor  goto 32


state 412
	cuerpo_If_for_funcion : '{' . bloque_sentencias_For_funcion '}'  (85)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
=======
	sentencias_For  goto 211
	declarativas  goto 212
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 213
	salida  goto 214
	expresion_For  goto 215
	sentencia_BREAK  goto 216
	sentencia_CONTINUE  goto 217
	encabezado_func  goto 31
	ret_fun  goto 218
	sentencia_if_for  goto 219
	encabezado_For  goto 32
	cola_For  goto 389

=======
	cte  shift 390
	.  error

>>>>>>> release

state 377
	cuerpo_then_funcion : then '{' bloque_sentencias_ejecutables_funcion '}' .  (115)

	.  reduce 115


state 378
	bloque_sentencias_ejecutables_funcion : bloque_sentencias_ejecutables_funcion ejecutables_funcion .  (65)

	.  reduce 65


state 379
	cuerpo_Else_funcion : Else '{' bloque_sentencias_ejecutables_funcion '}' .  (117)

	.  reduce 117


state 380
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for . ';' signo id cola_For_funcion error  (161)

	';'  shift 391
	.  error


state 381
	sentencia_for_funcion : For '(' id op_asignacion cte ':' . condicion_for ':' signo id ')' cola_For_funcion error  (162)

	id  shift 55
	.  error

	condicion_for  goto 392


state 382
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion end_if ';'  (119)
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion end_if error  (120)
	sentencia_if_for_funcion : If condicion_if . cuerpo_If_for_funcion error  (121)

	then  shift 393
	Else  shift 394
	.  error

	cuerpo_If_for_funcion  goto 395
	then_if_for_funcion  goto 396
	else_if_for_funcion  goto 397


state 383
	cola_For_funcion : '{' bloque_sentencias_For_funcion . '}' ';'  (157)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (176)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 398
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 399


state 384
	bloque_sentencias_For_funcion : sentencias_For_funcion .  (175)

	.  reduce 175


state 385
	sentencias_For_funcion : declarativas error .  (174)

	.  reduce 174


state 386
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For  (139)

	id  shift 400
	.  error


state 387
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For . error  (136)

	error  shift 401
	.  error


state 388
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id cola_For error .  (137)

	.  reduce 137


state 389
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' . cola_For error  (138)

	id  shift 4
	If  shift 218
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 220
	'('  shift 16
	.  error

	declaracion_const  goto 19
	sentencias_For  goto 221
	declarativas  goto 222
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33
	cola_For  goto 402


state 390
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte . ';' condicion_for ';' signo id ')' cola_For_funcion  (163)

	';'  shift 403
	.  error


state 391
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' . signo id cola_For_funcion error  (161)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 404


state 392
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for . ':' signo id ')' cola_For_funcion error  (162)

	':'  shift 405
	.  error


state 393
	then_if_for_funcion : then . '{' bloque_sentencias_For_funcion '}'  (125)
	then_if_for_funcion : then . sentencias_For_funcion  (126)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 406
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 407


state 394
	else_if_for_funcion : Else . '{' bloque_sentencias_For_funcion '}'  (127)
	else_if_for_funcion : Else . sentencias_For_funcion  (128)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 408
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 409


state 395
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion . end_if ';'  (119)
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion . end_if error  (120)
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion . error  (121)

	error  shift 410
	end_if  shift 411
	.  error


state 396
	cuerpo_If_for_funcion : then_if_for_funcion . else_if_for_funcion  (122)
	cuerpo_If_for_funcion : then_if_for_funcion .  (123)

	Else  shift 394
	error  reduce 123
	end_if  reduce 123

	else_if_for_funcion  goto 412


state 397
	cuerpo_If_for_funcion : else_if_for_funcion . error  (124)

	error  shift 413
	.  error


state 398
	cola_For_funcion : '{' bloque_sentencias_For_funcion '}' . ';'  (157)

	';'  shift 414
	.  error


state 399
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion sentencias_For_funcion .  (176)

	.  reduce 176


state 400
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For  (139)

	')'  shift 415
	.  error


state 401
	encabezado_For : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For error .  (136)

	.  reduce 136


state 402
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For . error  (138)

	error  shift 416
	.  error


state 403
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' . condicion_for ';' signo id ')' cola_For_funcion  (163)

	id  shift 55
	.  error

	condicion_for  goto 417


state 404
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo . id cola_For_funcion error  (161)

	id  shift 418
	.  error


state 405
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' . signo id ')' cola_For_funcion error  (162)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 419


state 406
	then_if_for_funcion : then '{' . bloque_sentencias_For_funcion '}'  (125)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	bloque_sentencias_For_funcion  goto 420
	sentencias_For_funcion  goto 384


state 407
	then_if_for_funcion : then sentencias_For_funcion .  (126)

	.  reduce 126


state 408
	else_if_for_funcion : Else '{' . bloque_sentencias_For_funcion '}'  (127)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	bloque_sentencias_For_funcion  goto 421
	sentencias_For_funcion  goto 384


state 409
	else_if_for_funcion : Else sentencias_For_funcion .  (128)

	.  reduce 128


state 410
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion error .  (121)

	.  reduce 121


state 411
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion end_if . ';'  (119)
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion end_if . error  (120)

	error  shift 422
	';'  shift 423
	.  error


state 412
	cuerpo_If_for_funcion : then_if_for_funcion else_if_for_funcion .  (122)

	.  reduce 122


state 413
	cuerpo_If_for_funcion : else_if_for_funcion error .  (124)

<<<<<<< HEAD
	id  shift 223
	If  shift 345
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 346
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	bloque_sentencias_For_funcion  goto 426
	sentencias_For_funcion  goto 401
	etiquetaFor  goto 32


state 413
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion . error  (84)

	error  shift 427
	.  error


state 414
	cuerpo_If_for_funcion : sentencias_For_funcion .  (86)

	.  reduce 86


state 415
	cola_For_funcion : '{' bloque_sentencias_For_funcion '}' . ';'  (89)

	';'  shift 428
	.  error


state 416
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion sentencias_For_funcion .  (105)

	.  reduce 105


state 417
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error .  (92)

	.  reduce 92


state 418
	sentencia_for_funcion : For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion .  (91)

	.  reduce 91


state 419
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion . error  (94)

	error  shift 429
	.  error


state 420
	cuerpo_Else_for : '{' bloque_sentencias_For '}' .  (139)

	.  reduce 139


state 421
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for error ';' .  (135)

	.  reduce 135


state 422
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if error .  (133)

	.  reduce 133


state 423
	sentencia_if_for : If condicion_if then cuerpo_If_for Else cuerpo_Else_for end_if ';' .  (132)

	.  reduce 132


state 424
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion  (95)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 380
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 390
	cola_For_funcion  goto 430
	etiquetaFor  goto 32


state 425
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion . end_if ';'  (79)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion . Else cuerpo_Else_for_funcion end_if ';'  (80)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion . Else cuerpo_Else_for_funcion end_if error  (81)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion . error  (82)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion . Else cuerpo_Else_for_funcion error ';'  (83)

	error  shift 431
	Else  shift 432
	end_if  shift 433
	.  error


state 426
	cuerpo_If_for_funcion : '{' bloque_sentencias_For_funcion . '}'  (85)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (105)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 434
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 416
	etiquetaFor  goto 32


state 427
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion error .  (84)
=======
	declarativas  goto 347
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 348
	salida  goto 349
	sentencia_BREAK  goto 350
	sentencia_CONTINUE  goto 351
	encabezado_func  goto 31
	ret_fun  goto 352
	sentencia_for_funcion  goto 353
	sentencia_if_for_funcion  goto 354
	sentencias_For_funcion  goto 355
	cola_For_funcion  goto 419


state 414
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion . error  (158)

	error  shift 420
	.  error


state 415
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id . ')' cola_For_funcion error  (159)

	')'  shift 421
	.  error


state 416
	then_if_for_funcion : then '{' bloque_sentencias_For_funcion '}' .  (123)

	.  reduce 123


state 417
	else_if_for_funcion : Else '{' bloque_sentencias_For_funcion '}' .  (125)

	.  reduce 125


state 418
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion  (160)

	id  shift 422
	.  error


state 419
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion . error  (157)

	error  shift 423
	.  error


state 420
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error .  (158)
>>>>>>> release

	.  reduce 158


<<<<<<< HEAD
state 428
	cola_For_funcion : '{' bloque_sentencias_For_funcion '}' ';' .  (89)
=======
state 421
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' . cola_For_funcion error  (159)
>>>>>>> release

	id  shift 223
	If  shift 345
	out  shift 6
	fun  shift 7
	Return  shift 209
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 225
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 346
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 347
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 348
	salida  goto 349
	sentencia_BREAK  goto 350
	sentencia_CONTINUE  goto 351
	encabezado_func  goto 31
	ret_fun  goto 352
	sentencia_for_funcion  goto 353
	sentencia_if_for_funcion  goto 354
	sentencias_For_funcion  goto 355
	cola_For_funcion  goto 424


<<<<<<< HEAD
state 429
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error .  (94)
=======
state 422
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion  (160)
>>>>>>> release

	')'  shift 425
	.  error


<<<<<<< HEAD
state 430
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion .  (95)
=======
state 423
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error .  (157)
>>>>>>> release
=======
	.  reduce 124


state 414
	cola_For_funcion : '{' bloque_sentencias_For_funcion '}' ';' .  (157)
>>>>>>> release

	.  reduce 157


<<<<<<< HEAD
<<<<<<< HEAD
state 431
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion error .  (82)
=======
state 424
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion . error  (159)
>>>>>>> release

	error  shift 426
	.  error


<<<<<<< HEAD
state 432
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else . cuerpo_Else_for_funcion end_if ';'  (80)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else . cuerpo_Else_for_funcion end_if error  (81)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else . cuerpo_Else_for_funcion error ';'  (83)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 435
=======
state 425
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion  (160)

	id  shift 223
	If  shift 345
=======
state 415
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For  (139)

	id  shift 4
	If  shift 218
>>>>>>> release
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 11
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
<<<<<<< HEAD
	'{'  shift 346
>>>>>>> release
=======
	'{'  shift 220
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
<<<<<<< HEAD
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	cuerpo_Else_for_funcion  goto 436
	sentencias_For_funcion  goto 437
	etiquetaFor  goto 32


state 433
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion end_if . ';'  (79)

	';'  shift 438
	.  error


state 434
	cuerpo_If_for_funcion : '{' bloque_sentencias_For_funcion '}' .  (85)
=======
	declarativas  goto 347
=======
	sentencias_For  goto 221
	declarativas  goto 222
>>>>>>> release
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 223
	salida  goto 224
	expresion_For  goto 225
	invocacion_funcion  goto 226
	sentencia_BREAK  goto 227
	sentencia_CONTINUE  goto 228
	encabezado_func  goto 32
	ret_fun  goto 229
	sentencia_if_for  goto 230
	encabezado_For  goto 33
	cola_For  goto 424


state 416
	encabezado_For : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For error .  (138)

	.  reduce 138


state 417
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for . ';' signo id ')' cola_For_funcion  (163)

	';'  shift 425
	.  error


state 418
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion error  (160)
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id . cola_For_funcion error  (161)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 358
	'('  shift 16
	')'  shift 426
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 368
	cola_For_funcion  goto 427


state 419
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo . id ')' cola_For_funcion error  (162)

	id  shift 428
	.  error


state 420
	then_if_for_funcion : then '{' bloque_sentencias_For_funcion . '}'  (125)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (176)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 429
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 399


state 421
	else_if_for_funcion : Else '{' bloque_sentencias_For_funcion . '}'  (127)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (176)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 430
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 399


state 422
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion end_if error .  (120)

	.  reduce 120


state 423
	sentencia_if_for_funcion : If condicion_if cuerpo_If_for_funcion end_if ';' .  (119)

	.  reduce 119


state 424
	encabezado_For : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For .  (139)

	.  reduce 139


state 425
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' . signo id ')' cola_For_funcion  (163)

	'+'  shift 99
	'-'  shift 100
	.  error

	signo  goto 431


state 426
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion error  (160)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 358
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 368
	cola_For_funcion  goto 432


state 427
<<<<<<< HEAD
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion .  (160)
>>>>>>> release
=======
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion . error  (161)

	error  shift 433
	.  error


state 428
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id . ')' cola_For_funcion error  (162)

	')'  shift 434
	.  error


state 429
	then_if_for_funcion : then '{' bloque_sentencias_For_funcion '}' .  (125)

	.  reduce 125


state 430
	else_if_for_funcion : Else '{' bloque_sentencias_For_funcion '}' .  (127)

	.  reduce 127


state 431
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo . id ')' cola_For_funcion  (163)

	id  shift 435
	.  error


state 432
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion . error  (160)

	error  shift 436
	.  error


state 433
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id cola_For_funcion error .  (161)

	.  reduce 161


state 434
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' . cola_For_funcion error  (162)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 358
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 368
	cola_For_funcion  goto 437


state 435
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id . ')' cola_For_funcion  (163)

	')'  shift 438
	.  error


state 436
	sentencia_for_funcion : For id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion error .  (160)
>>>>>>> release

	.  reduce 160


<<<<<<< HEAD
<<<<<<< HEAD
state 435
	cuerpo_Else_for_funcion : '{' . bloque_sentencias_For_funcion '}'  (87)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'('  shift 16
	.  error

	declaracion_const  goto 19
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	bloque_sentencias_For_funcion  goto 439
	sentencias_For_funcion  goto 401
	etiquetaFor  goto 32


state 436
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion . end_if ';'  (80)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion . end_if error  (81)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion . error ';'  (83)

	error  shift 440
	end_if  shift 441
	.  error


state 437
	cuerpo_Else_for_funcion : sentencias_For_funcion .  (88)

	.  reduce 88


state 438
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion end_if ';' .  (79)

	.  reduce 79


state 439
	cuerpo_Else_for_funcion : '{' bloque_sentencias_For_funcion . '}'  (87)
	bloque_sentencias_For_funcion : bloque_sentencias_For_funcion . sentencias_For_funcion  (105)

	id  shift 203
	If  shift 379
	out  shift 6
	fun  shift 7
	Return  shift 205
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 206
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'}'  shift 442
=======
state 437
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion . error  (162)

	error  shift 439
	.  error


state 438
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' . cola_For_funcion  (163)

	id  shift 234
	If  shift 357
	out  shift 6
	fun  shift 7
	Return  shift 219
	BREAK  shift 8
	i32  shift 9
	when  shift 10
	For  shift 236
	CONTINUE  shift 12
	f32  shift 13
	Const  shift 14
	'{'  shift 358
>>>>>>> release
	'('  shift 16
	.  error

	declaracion_const  goto 19
<<<<<<< HEAD
	declarativas  goto 382
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 383
	salida  goto 384
	sentencia_BREAK  goto 385
	sentencia_CONTINUE  goto 386
	encabezado_func  goto 31
	ret_fun  goto 387
	sentencia_for_funcion  goto 388
	sentencia_if_for_funcion  goto 389
	sentencias_For_funcion  goto 416
	etiquetaFor  goto 32


state 440
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion error . ';'  (83)

	';'  shift 443
	.  error


state 441
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if . ';'  (80)
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if . error  (81)

	error  shift 444
	';'  shift 445
	.  error


state 442
	cuerpo_Else_for_funcion : '{' bloque_sentencias_For_funcion '}' .  (87)

	.  reduce 87


state 443
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion error ';' .  (83)

	.  reduce 83


state 444
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if error .  (81)

	.  reduce 81


state 445
	sentencia_if_for_funcion : If condicion_if then cuerpo_If_for_funcion Else cuerpo_Else_for_funcion end_if ';' .  (80)

	.  reduce 80


37 terminals, 63 nonterminals
199 grammar rules, 446 states
=======
37 terminals, 68 nonterminals
197 grammar rules, 428 states
>>>>>>> release
=======
	declarativas  goto 359
	tipo  goto 22
	declaracion_func  goto 23
	sentencia_when  goto 24
	asignacion  goto 360
	salida  goto 361
	invocacion_funcion  goto 362
	sentencia_BREAK  goto 363
	sentencia_CONTINUE  goto 364
	encabezado_func  goto 32
	ret_fun  goto 365
	sentencia_for_funcion  goto 366
	sentencia_if_for_funcion  goto 367
	sentencias_For_funcion  goto 368
	cola_For_funcion  goto 440


state 439
	sentencia_for_funcion : For '(' id op_asignacion cte ':' condicion_for ':' signo id ')' cola_For_funcion error .  (162)

	.  reduce 162


state 440
	sentencia_for_funcion : id ':' For '(' id op_asignacion cte ';' condicion_for ';' signo id ')' cola_For_funcion .  (163)

	.  reduce 163


37 terminals, 70 nonterminals
205 grammar rules, 441 states
>>>>>>> release
